---
layout: project
---
-# layout for pages related to the blog
-# display menu on the left
-# handles title display

- if not page.posts.nil?
  - member = site.people.values.detect{|member| member.name == page.posts[0].author[0].to_s}
  - sanitized_member = page.posts[0].author[0].primary_page.url.split("/")[-1].to_s

-# Project specific navigation menu
.row-fluid
  -# Menu
  .span2
    .project-menu
      .text-center.project-menu-title
        %a{:href => '/', :class => 'icon-stack'}
          %i.icon-circle.icon-stack-base.icon-fixed-width
          %i{:class => "icon icon-light icon-fixed-width icon-quote-right"}
          /icon-rss icon-signal
      %ul.nav.nav-list
        -# removes index.html and then replace download.html to download/
        - current_path = page.output_path.sub(/index\.html$/, "").sub(/\.html$/,"/")

        - href = "/"
        - active = false
        %li{:class => "#{(active ? "active" : "")}"}
          %a{:href => "#{relative("#{href}")}"}
            %i{:class => "icon-home menu-icon"}
            Home

        - href = "/blog.atom"
        - active = false
        %li{:class => "#{(active ? "active" : "")}"}
          %a{:href => "#{relative("#{href}")}"}
            %i{:class => "icon-rss menu-icon"}
            Feed

      - if member && member.content && !member.content.empty?
        %hr.divider
        .bio
        .expandable
          %h2 Bio
          - if member.gravatar_hash
            .author-image-container
              .author-image
                %img.author-image{:src=>"https://www.gravatar.com/avatar/#{member.gravatar_hash}?s=150"}

          #{member.content}

      %hr.divider
      .cloud-tags
        %h2 Tags
        = site.posts_tags_cloud

      %hr.divider
      .cloud-authors
        %h2 Authors
        = site.posts_author_cloud

  .span10
    -# Title
    = partial( page.title_partial.nil? ? 'project/title.html.haml' : page.title_partial, {"real_page" => page} )
    %h1
      In relation to
      -if member
        = member.name
    - if not page.posts.nil?
      -# Look for the author in _data/people/
      - member = site.people.values.detect{|person| person.name == page.posts[0].author[0].to_s}
      -# If the author does not have a bio, use the name in the first blog post
      - if member.nil?
        - member = page.posts[0].author[0].to_s
      - for post in page.posts
        .blogpost
          = partial( 'project/blog/post.html.haml', {"post" => post, "show_author_image" => false } )
      = page.posts.links
