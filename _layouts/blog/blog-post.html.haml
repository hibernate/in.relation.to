---
layout: project
---
-# layout for pages related to the blog
-# display menu on the left
-# handles title display

-# Project specific navigation menu
.row-fluid
  -# Menu
  .span2
    .project-menu
      .text-center.project-menu-title
        %a{:href => '/', :class => 'icon-stack'}
          %i.icon-circle.icon-stack-base.icon-fixed-width
          %i{:class => "icon icon-light icon-fixed-width icon-quote-right"}
          /icon-rss icon-signal
    %hr.divider
    %ul.nav.nav-list
      -# removes index.html and then replace download.html to download/
      - current_path = page.output_path.sub(/index\.html$/, "").sub(/\.html$/,"/")

      - href = "/"
      - active = false
      %li{:class => "#{(active ? "active" : "")}"}
        %a{:href => "#{relative("#{href}")}"}
          %i{:class => "icon-home menu-icon"}
          Home

      - href = "/blog.atom"
      - active = false
      %li{:class => "#{(active ? "active" : "")}"}
        %a{:href => "#{relative("#{href}")}"}
          %i{:class => "icon-rss menu-icon"}
          Feed
    %hr.divider
    .blogtagbar
      .single_blog_author
        - authors = page.author
        - # when splitting are disabled in the pipeline, authors is a string
        - if not authors.kind_of?(Array)
          - authors = [ authors ]
        - authors.each do |author|
          - url = author.kind_of?(String) ? '' : author.primary_page.url
          %a{:href=>url}
            = author
      .single_blog_date
        #{page.date.strftime( '%Y-%m-%d' )}
      .single_blog_tags
        - page.tags.each do |tag|
          - # when splitting are disabled in the pipeline, tag is a string
          - url = tag.kind_of?(String) ? '' : tag.primary_page.url
          %a.label{:href=>url}
            = tag
          &nbsp;
  .span8
    -# Title
    = partial( page.title_partial.nil? ? 'project/title.html.haml' : page.title_partial, {"real_page" => page} )
    ~ content
    #disqus_thread
    %script{:src=>javascript, :type=>'text/javascript'}
      var disqus_shortname = '#{site.disqus_shortname}';
      var disqus_identifier = '#{page.creation_date}-#{page.slug}';
      var disqus_title = '#{page.title}';
      var disqus_url = '#{page.disqus_thread_id}';

      (function() {
      var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
      dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
      })();

    %noscript
      Please enable JavaScript to view the
      %a{:href=>'https://disqus.com/?ref_noscriptr', :rel=>'nofollow'}
        comments powered by Disqus.
