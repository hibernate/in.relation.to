---
title: "Updated OGM kitchensink example"
author: "Hardy Ferentschik"
blogger_name: "Hardy"
creation_date: "20-06-2012"
original_tags: [Hibernate OGM]
tags: [Hibernate OGM]

relative_url: /2012/06/20/updated-ogm-kitchensink-example
slug: updated-ogm-kitchensink-example
lace: http://in.relation.to/23267.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2012/06/20/updated-ogm-kitchensink-example
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
Last year I have been giving an <a href="http://in.relation.to/22244.lace" target="" class="regularLink">introduction</a> to OGM and OpenShift at JUDCon London using a modified version of the <a href="https://github.com/jbossas/quickstart" target="" class="regularLink">kitchensink quickstart</a>. Time has gone and it was time to give the demo a revamp. 
</p>

<p class="wikiPara">
Thanks to Sanne the code got updated to use the latest app server (<a href="http://www.jboss.org/jbossas/downloads/" target="" class="regularLink">AS 7.1.1.Final Brontes</a>) and naturally the latest <a href="http://www.hibernate.org/subprojects/ogm.html" target="" class="regularLink">OGM</a> and <a href="http://search.hibernate.org" target="" class="regularLink">Search</a> versions. Another change is that now <a href="http://www.jboss.org/infinispan/" target="" class="regularLink">Infinispan</a> is not only used to persist the entity data via OGM, but it is also used for storing the Lucene indexes via the <a href="http://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#infinispan-directories" target="" class="regularLink">Infinispan directory provider</a> (see <u>persistence.xml</u> of the example project). Sanne added also a bunch of new tests show casing <a href="http://www.jboss.org/arquillian.html" target="" class="regularLink">Arquillian</a> and different ways to bundle the application. Definitely worth checking out!
</p>

<p class="wikiPara">
Personally, I had a look at the project setup and made some changes there. The original demo assumed you had a local app server installation as a prerequisite on your machine. It then used the <a href="https://github.com/jbossas/jboss-as-maven-plugin" target="" class="regularLink">jboss-as-maven-plugin</a> to deploy the webapp. Unfortunately, this plugin does not allow me to start and stop the server and it seems redundant to require a local install if the Arquillian tests already download an AS instance (yes, I could run the test against the local instance as well, but think for example continuous integration where I want to manage/control the WHOLE ENVIRONMENT). 
</p>

<p class="wikiPara">
In the end I decided to give the <a href="http://cargo.codehaus.org/Maven2+plugin" target="" class="regularLink">cargo</a> plugin another go. A lot has happened there and it supports not only JBoss 7.x, but it also offers a so called <a href="http://cargo.codehaus.org/Installer" target="" class="regularLink">artifact installer</a> which allows to download the app server as a managed maven dependency. The relevant <u>pom.xml</u> settings look like this:
</p>

<pre class="wikiPreformatted">          ...
          &lt;plugin&gt;
                &lt;groupId&gt;org.codehaus.cargo&lt;/groupId&gt;
                &lt;artifactId&gt;cargo-maven2-plugin&lt;/artifactId&gt;
                &lt;version&gt;1.2.1&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;container&gt;
                        &lt;containerId&gt;jboss71x&lt;/containerId&gt;
                        &lt;artifactInstaller&gt;
                            &lt;groupId&gt;org.jboss.as&lt;/groupId&gt;
                            &lt;artifactId&gt;jboss-as-dist&lt;/artifactId&gt;
                            &lt;version&gt;7.1.1.Final&lt;/version&gt;
                        &lt;/artifactInstaller&gt;
                    &lt;/container&gt;
                &lt;/configuration&gt;
                &lt;executions&gt;
                    &lt;execution&gt;
                        &lt;id&gt;install-container&lt;/id&gt;
                        &lt;phase&gt;initialize&lt;/phase&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;install&lt;/goal&gt;
                        &lt;/goals&gt;
                    &lt;/execution&gt;
                &lt;/executions&gt;
            &lt;/plugin&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.codehaus.gmaven&lt;/groupId&gt;
                &lt;artifactId&gt;gmaven-plugin&lt;/artifactId&gt;
                &lt;version&gt;1.3&lt;/version&gt;
                &lt;executions&gt;
                    &lt;execution&gt;
                        &lt;id&gt;copy-modules&lt;/id&gt;
                        &lt;phase&gt;initialize&lt;/phase&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;execute&lt;/goal&gt;
                        &lt;/goals&gt;
                        &lt;configuration&gt;
                            &lt;source&gt;
                                def toDir = new File(project.properties['jbossTargetDir'], 'modules')
                                def fromDir = new File(project.basedir, '.openshift/config/modules')
                                log.info('Copying OGM module from ' + fromDir + ' to ' + toDir)
                                ant.copy(todir: toDir) {
                                fileset(dir: fromDir) {
                                exclude(name: 'README')
                                }
                                }
                            &lt;/source&gt;
                        &lt;/configuration&gt;
                    &lt;/execution&gt;
                &lt;/executions&gt;
            &lt;/plugin&gt;
            ...|
 </pre>
<p class="wikiPara">
          
I am using <u>cargo:install</u> in the <u>initialize</u> phase to install the app server into the target directory. This way I can install a custom module (via the gmaven plugin) before the tests get executed and/or before I start the application via a simple:
</p>

<pre class="wikiPreformatted">    $ mvn package cargo:run
</pre>

<p class="wikiPara">
    
Neat, right?
</p>

<p class="wikiPara">
You find all the code on GitHub in the <a href="https://github.com/hferentschik/ogm-kitchensink" target="" class="regularLink">ogm-kitchensink</a>. The <a href="https://github.com/hferentschik/ogm-kitchensink/blob/master/README.md" target="" class="regularLink">README</a> gives more information about the main maven goals.
</p>

<p class="wikiPara">
Enjoy,
Hardy</p>
</div>

