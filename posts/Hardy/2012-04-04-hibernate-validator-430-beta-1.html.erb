---
title: "Hibernate Validator 4.3.0.Beta1"
author: "Hardy Ferentschik"
blogger_name: "Hardy"
creation_date: "04-04-2012"
original_tags: [Hibernate Validator]
tags: [Hibernate Validator]

relative_url: /2012/04/04/hibernate-validator-430-beta-1
slug: hibernate-validator-430-beta-1
lace: http://in.relation.to/23077.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2012/04/04/hibernate-validator-430-beta-1
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
Moving along the road to a Hibernate Validator 4.3 release I am happy to announce the release of Hibernate Validator 4.3.0.Beta1.
</p>

<p class="wikiPara">
One of our foci this time around was to address existing caching issues. <a href="https://hibernate.onjira.com/browse/HV-479" target="" class="regularLink">HV-479</a> addresses the problem that the constraint metadata for a given class would be cached in the so called <i class="wikiEmphasis">BeanMetaDataManager</i> without an appropriate eviction policy. In most cases this should not be a problem, but for long running applications with for example hot redeploys it could be. We resolved this issue by introducing 
<a href="https://github.com/hibernate/hibernate-validator/blob/master/engine/src/main/java/org/hibernate/validator/internal/util/SoftLimitMRUCache.java" target="" class="regularLink">SoftLimitMRUCache</a> which has an upper bound for the cached metadata.
</p>

<p class="wikiPara">
<a href="https://hibernate.onjira.com/browse/HV-564" target="" class="regularLink">HV-564</a> is another caching related issue. Initially <i class="wikiEmphasis">ConstraintValidator</i> instances were only cached if they where created by the Hibernate Validator specific <i class="wikiEmphasis">ConstraintValidatorFactoryImpl</i>. Now caching occurs also for custom <i class="wikiEmphasis">ConstraintValidatorFactory</i>s.
</p>

<p class="wikiPara">
Two other interesting issues are <a href="https://hibernate.onjira.com/browse/HV-563" target="" class="regularLink">HV-563</a> and
<a href="https://hibernate.onjira.com/browse/HV-517" target="" class="regularLink">HV-517</a>. The former allows you to reuse your <i class="wikiEmphasis">Configuration</i> instance and call <i class="wikiEmphasis">Configuration#buildValidatorFactory()</i> multiple times. The latter introduces the concept of ignoring annotations to the programmatic API. In the XML configuration it has always been possible to do something like this:</p>
<pre class="wikiPreformatted">
    &lt;constraint-mappings
        xmlns="http://jboss.org/xml/ns/javax/validation/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://jboss.org/xml/ns/javax/validation/mapping validation-mapping-1.0.xsd"&gt;

        &lt;bean class="my.package.MyClass" ignore-annotations="true"&gt;
        &lt;/bean&gt;
    &lt;/constraint-mappings&gt;
</pre>
    
Via the programmatic API this is now possible via:<pre class="wikiPreformatted">
    // ...
    HibernateValidatorConfiguration configuration = ...
    ConstraintMapping mapping = configuration.createConstraintMapping();
    mapping.type( MyClass.class ).ignoreAllAnnotations();
    // ...
</pre>
    
Of course <i class="wikiEmphasis">ignoreAllAnnotations()</i> is also available on the property level of the API.


<p class="wikiPara">
Another important focus was on <a href="https://hibernate.onjira.com/browse/HV-561" target="" class="regularLink">HV-561</a>. This issue identifies the API methods which will change between Hibernate Validator 4.3 to 5 (as much as we can foresee this at the moment). Causes for these changes are  <a href="http://beanvalidation.org" target="" class="regularLink">Bean Validation 1.1</a> and the separation between API/SPI and internal packages. This has already been discussed in the <a href="http://in.relation.to/Bloggers/HibernateValidatorRoadmapAnd430Alpha1Release" target="" class="regularLink">previous</a> release blog. Right now we have two new packages <i class="wikiEmphasis">org.hibernate.validator.spi.group</i> and <i class="wikiEmphasis">org.hibernate.validator.spi.resourceloading</i> containing <i class="wikiEmphasis">DefaultGroupSequenceProvider</i> and <i class="wikiEmphasis">ResourceBundleLocator</i> respectively. The old versions of these interfaces have been deprecated and will be removed in HV 5.
 
On a side note, right now we have the following packages:</p>
<pre class="wikiPreformatted">
    org.hibernate.validator.cfg
    org.hibernate.validator.constraints
    org.hibernate.validator.group
    org.hibernate.validator.internal
    org.hibernate.validator.messageinterpolation
    org.hibernate.validator.method
    org.hibernate.validator.resourceloading
    org.hibernate.validator.spi
</pre>
    
Would it make sense to have (by pushing cfg, constraints, group, messageinterpolation, method and resourceloading one level down):<pre class="wikiPreformatted">
    org.hibernate.validator.api
    org.hibernate.validator.internal
    org.hibernate.validator.spi
</pre>
    
Obviously such a move would break much more client code than the current structure. Let us know what you think.


<p class="wikiPara">
Last but not least, there are also some news from the Hibernate Validator Annotation Processor which can now be used without any additional dependencies (<a href="https://hibernate.onjira.com/browse/HV-457" target="" class="regularLink">HV-457</a>). This will make it easier to configure the processor within your build as well as IDE.
</p>

<p class="wikiPara">
Hibernate Validator 4.3.0.Beta1 is available via the <a href="http://repository.jboss.org/nexus" target="" class="regularLink">JBoss Maven Repository</a> under the GAV <i class="wikiEmphasis">org.hibernate:hibernate-validator:4.3.0.Beta1</i> or via 
<a href="http://sourceforge.net/projects/hibernate/files/hibernate-validator/4.3.0.Beta1" target="" class="regularLink">SourceForge</a>.
The changelog is available <a href="https://hibernate.onjira.com/secure/ReleaseNote.jspa?projectId=10060&amp;version=11857" target="" class="regularLink">here</a> and make sure to check the <a href="https://community.jboss.org/wiki/HibernateValidatorMigrationGuide" target="" class="regularLink">Hibernate Validator Migration Guide</a> as well.
</p>

<p class="wikiPara">
Feedback is always welcome via the <a href="https://forum.hibernate.org/viewforum.php?f=9" target="" class="regularLink">Validator Forum</a> and the project <a href="http://opensource.atlassian.com/projects/hibernate/browse/HV" target="" class="regularLink">issue tracker</a>.
</p>

<p class="wikiPara">
Enjoy!
</p>
</div>

