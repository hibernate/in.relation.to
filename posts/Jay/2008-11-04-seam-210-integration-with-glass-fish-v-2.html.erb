---
title: "Seam 2.1.0 Integration with GlassFish v2"
author: "Jay Balunas"
blogger_name: "Jay"
creation_date: "04-11-2008"
original_tags: [Interoperability,Seam]
tags: [Seam]

relative_url: /2008/11/04/seam-210-integration-with-glass-fish-v-2
slug: seam-210-integration-with-glass-fish-v-2
lace: http://in.relation.to/9768.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2008/11/04/seam-210-integration-with-glass-fish-v-2
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
The <a href="http://seamframework.org/Download" target="" class="regularLink">Seam 2.1.0.SP1</a> release included a new <a href="http://docs.jboss.com/seam/2.1.0.SP1/reference/en-US/html/glassfish.html" target="" class="regularLink">reference guide chapter</a> describing Seam integration with GlassFish v2.  As with most container integration the bulk of the work is reconciling library differences, datasources and deployment descriptor changes.  Glassfish is no different in that regard, however it is much easier to integrate and work with GlassFish than some of the other containers that I written about.
</p>

<p class="wikiPara">
To demonstrate the ease of integration with GlassFish I'll show you how to deploy 2 different Seam examples, and migrate a <tt>seam-gen</tt> application one in one blog - and it won't even be that long - well not too long ;-)
</p>


<h3 class="wikiHeadline3" id="H-GlasshFishVersionAndSetup"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-GlasshFishVersionAndSetup">GlasshFish Version and Setup</a></h3>
<p class="wikiPara">
For this blog I used <a href="https://glassfish.dev.java.net/downloads/v2ur2-b04.html" target="" class="regularLink">GlassFish v2ur4-b04</a> on a linux machine with JDK6.  The instructions for installing GlassFish are at the bottom of the download page and are pretty straightforward.  I'll assume that you have it installed and have created a domain as explained on the download page.
</p>


<p class="wikiPara">
<i class="wikiEmphasis">Note:</i> all of the examples below require the embedded <tt>javaDB</tt> database that ships with GlassFish to be started.  To start and stop the database execute:
</p>

<pre class="wikiPreformatted">$ asadmin start-database
$ asadmin stop-database
</pre>
<p class="wikiPara">
 
</p>

<h2 class="wikiHeadline2" id="H-TheTtjee5bookingttExample"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-TheTtjee5bookingttExample">The <tt>jee5/booking</tt> Example</a></h2>
<p class="wikiPara">
This example is based on the Seam Booking example and showcases how to build Java EE 5 compliant Seam application.  To build and deploy it follow these steps.
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> Navigate to the <tt>$SEAM_HOME/examples/jee5/booking</tt> directory</li>
<li class="wikiOrderedListItem"> Execute <tt>ant</tt>
</li>
<li class="wikiOrderedListItem"> The example will build the <tt>ear</tt> file into the <tt>$SEAM_HOME/examples/jee5/booking/dist</tt> directory.</li>
<li class="wikiOrderedListItem"> Use the GlassFish <a href="http://localhost:4848" target="" class="regularLink">Admin Console</a> to deploy <tt>jboss-seam-jee5.ear</tt> as an Enterprise Application with all the default settings.</li>
<li class="wikiOrderedListItem"> Navigate to <a href="http://localhost:8080/seam-jee5/" target="" class="regularLink">http://localhost:8080/seam-jee5/</a> and check out the example.</li>
</ol>

<p class="wikiPara">
Thats it, nothing else is needed.
</p>

<h2 class="wikiHeadline2" id="H-TheTtjpattExample"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-TheTtjpattExample">The <tt>jpa</tt> Example</a></h2>
<p class="wikiPara">
This is the Hotel Booking example implemented with Seam POJOs and Hibernate JPA.  Building and deploying this example is nearly the same as the <tt>jee5/booking</tt> example.
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> Navigate to the <tt>$SEAM_HOME/examples/jpa</tt> directory</li>
<li class="wikiOrderedListItem"> Execute <tt>ant glassfish</tt>
</li>
<li class="wikiOrderedListItem"> The example will build the <tt>war</tt> file into the <tt>$SEAM_HOME/examples/jpa/dist-glassfish</tt> directory.</li>
<li class="wikiOrderedListItem"> Use the GlassFish <a href="http://localhost:4848" target="" class="regularLink">Admin Console</a> to deploy <tt>jboss-seam-jpa.war</tt> as a Web Application with all the default settings.</li>
<li class="wikiOrderedListItem"> Navigate to <a href="http://localhost:8080/jboss-seam-jpa/" target="" class="regularLink">http://localhost:8080/jboss-seam-jpa/</a> and check out the example.</li>
</ol>

<p class="wikiPara">
These examples were quite easy and straightforward to build and deploy.  This is partially because they were built with GlassFish integration in mind.  You might be asking what actual changes are needed to deploy to GlassFish.  The next section will cover that exact thing.
</p>

<h2 class="wikiHeadline2" id="H-MigratingATtseamgenttProjectToGlassFish"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-MigratingATtseamgenttProjectToGlassFish">Migrating a <tt>seam-gen</tt> Project to GlassFish</a></h2>
<p class="wikiPara">
The Seam framework uses <tt>seam-gen</tt> as a tool for developers to quickly get an application up and running, and provides a foundation to add your own functionality.  <tt>seam-gen</tt> creates applications that deploy to JBoss AS.  This section will detail what to change so you can deploy into GlassFish.
</p>

<h3 class="wikiHeadline3" id="H-InitialProjectSetup"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-InitialProjectSetup">Initial Project Setup</a></h3>
<p class="wikiPara">
First step is to get <tt>seam-gen</tt> to setup and create the base project.  In the <tt>$SEAM_HOME</tt> directory execute <tt>./seam setup</tt>.  This will launch a command line questionnaire about your application.  Set the JBoss home and workspace as you wish.  Set the project name to <i class="wikiEmphasis">seamgen_example</i>, use RichFaces ( instead of IceFaces ), and we want to make an <tt>ear</tt> project.  For all the other entries you can use the default values.  
</p>

<p class="wikiPara">
Then have <tt>seam-gen</tt> create the project by executing <tt>./seam new-project</tt>.  Then navigate to the new project for the rest of the steps.
</p>

<h3 class="wikiHeadline3" id="H-ConfigurationFileChanges"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-ConfigurationFileChanges">Configuration File Changes</a></h3>
<p class="wikiPara">
Below are the various changes needed to the default configuration files.
</p>

<h4 class="wikiHeadline4" id="H-TtresourcesMETAINFpersistencedevxmltt"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-TtresourcesMETAINFpersistencedevxmltt"><tt>resources/META-INF/persistence-dev.xml</tt></a></h4>
<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Change the <tt>jta-data-source</tt> to be <tt>jdbc/__default</tt>
</li>
<li class="wikiUnorderedListItem"> Replace all of the persistence properties with the following:</li>
</ul>

<pre class="wikiPreformatted">&lt;property name="hibernate.dialect" value="GlassFishDerbyDialect"/&gt;
&lt;property name="hibernate.hbm2ddl.auto" value="update"/&gt;
&lt;property name="hibernate.show_sql" value="true"/&gt;
&lt;property name="hibernate.format_sql" value="true"/&gt;
&lt;property name="hibernate.cache.provider_class" value="org.hibernate.cache.HashtableCacheProvider"/&gt;
&lt;property name="hibernate.transaction.manager_lookup_class" value="org.hibernate.transaction.SunONETransactionManagerLookup"/&gt;
</pre>

<h4 class="wikiHeadline4" id="H-TtresourcesGlassFishDerbyDialectclasstt"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-TtresourcesGlassFishDerbyDialectclasstt"><tt>resources/GlassFishDerbyDialect.class</tt></a></h4>
<p class="wikiPara">
We need to copy this file from the <tt>jpa</tt> example to work around an issue with Derby (javaDB) packaged with GlassFish.  From the <tt>seamgen_example</tt> project base execute the following.
</p>

<pre class="wikiPreformatted">cp $SEAM_HOME/examples/jpa/resources-glassfish/WEB-INF/classes/GlassFishDerbyDialect.class ./resources
</pre>


<h4 class="wikiHeadline4" id="H-TtresourcesWEBINFcomponentsxmltt"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-TtresourcesWEBINFcomponentsxmltt"><tt>resources/WEB-INF/components.xml</tt></a></h4>
<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> We want GlassFish to manage our transactions so we need to add <tt>&lt;transaction:ejb-transaction /&gt;</tt> and its namespace <tt>xmlns:transaction="http://jboss.com/products/seam/transaction"</tt> at the top of the file.</li>
<li class="wikiUnorderedListItem"> Change the <tt>jndi-pattern</tt> to <tt>java:comp/env/seamgen_example/#{ejbName}</tt>
</li>
</ul>

<h4 class="wikiHeadline4" id="H-TtresourcesWEBINFwebxmltt"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-TtresourcesWEBINFwebxmltt"><tt>resources/WEB-INF/web.xml</tt></a></h4>
<p class="wikiPara">
We need to add the following to the bottom of <tt>web.xml</tt> so that GlassFish binds the <tt>EJBs</tt> correctly.
</p>

<pre class="wikiPreformatted">  &lt;ejb-local-ref&gt;
    &lt;ejb-ref-name&gt;seamgen_example/EjbSynchronizations&lt;/ejb-ref-name&gt;  
    &lt;ejb-ref-type&gt;Session&lt;/ejb-ref-type&gt;
    &lt;local-home&gt;&lt;/local-home&gt;
    &lt;local&gt;org.jboss.seam.transaction.LocalEjbSynchronizations&lt;/local&gt;
  &lt;/ejb-local-ref&gt;
</pre>


<h4 class="wikiHeadline4" id="H-TtresourcesMETAINFapplicationxmltt"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-TtresourcesMETAINFapplicationxmltt"><tt>resources/META-INF/application.xml</tt></a></h4>
<p class="wikiPara">
Our base application does not have any of its own <tt>EJBs</tt> yet, and GlassFish does not like it when an application declares an <tt>EJB</tt> module that contains no <tt>EJBs</tt>.  So we need to remove the following:
</p>

<pre class="wikiPreformatted"> &lt;module&gt;
    &lt;ejb&gt;seamgen_example.jar&lt;/ejb&gt;
 &lt;/module&gt;
</pre>


<h3 class="wikiHeadline3" id="H-UpdatingTheBuildFile"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-UpdatingTheBuildFile">Updating the Build File</a></h3>
<p class="wikiPara">
Now all that is left is updating the <tt>build.xml</tt> file for the <tt>seamgen_example</tt> project.  
</p>

<h4 class="wikiHeadline4" id="H-AddingTtGlassFishDerbyDialectclassttToTheBuild"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-AddingTtGlassFishDerbyDialectclassttToTheBuild">Adding <tt>GlassFishDerbyDialect.class</tt> to the Build</a></h4>
<p class="wikiPara">
To do this locate the <tt>jar</tt> target and add the <tt>&lt;include name="GlassFishDerbyDialect.class" /&gt;</tt> where it is show below.
</p>

<pre class="wikiPreformatted"> &lt;target name="jar" depends="compile,copyclasses" description="Build the distribution .jar file"&gt;
   &lt;copy todir="${jar.dir}"&gt;
      &lt;fileset dir="${basedir}/resources"&gt;
         &lt;include name="seam.properties" /&gt;
         &lt;include name="*.drl" /&gt;
         &lt;include name="GlassFishDerbyDialect.class" /&gt;
      &lt;/fileset&gt; 
   &lt;/copy&gt;
  ...
</pre>


<h4 class="wikiHeadline4" id="H-AddingDependentLibraries"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-AddingDependentLibraries">Adding Dependent Libraries</a></h4>
<p class="wikiPara">
Locate the <tt>ear</tt> target and add the following <tt>&lt;include .../&gt;</tt> elements into the <tt>&lt;copy todir="${ear.dir}/lib"&gt;</tt> so that the <tt>&lt;fileset dir="${lib.dir}"&gt;</tt> looks like this: 
</p>

<pre class="wikiPreformatted"> &lt;fileset dir="${lib.dir}"&gt;
   &lt;includesfile name="deployed-jars-ear.list" /&gt;
   
   &lt;!-- Hibernate and deps --&gt;
   &lt;include name="hibernate.jar"/&gt;
   &lt;include name="hibernate-commons-annotations.jar"/&gt;
   &lt;include name="hibernate-annotations.jar"/&gt;
   &lt;include name="hibernate-entitymanager.jar"/&gt;
   &lt;include name="hibernate-validator.jar"/&gt;
   &lt;include name="jboss-common-core.jar" /&gt;
   
   &lt;!-- 3rd party and supporting jars --&gt;
   &lt;include name="javassist.jar" /&gt;
   &lt;include name="dom4j.jar" /&gt;
   &lt;include name="concurrent.jar" /&gt;
   &lt;include name="cglib.jar" /&gt;
   &lt;include name="asm.jar" /&gt;
   &lt;include name="antlr.jar" /&gt;
   &lt;include name="commons-logging.jar" /&gt;
   &lt;include name="commons-collections.jar" /&gt;
 &lt;/fileset&gt;
</pre>


<h3 class="wikiHeadline3" id="H-BuildAndDeploy"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-BuildAndDeploy">Build and Deploy</a></h3>
<p class="wikiPara">
All that is left at this point is to build and deploy the application.
</p>

<p class="wikiPara">
To build it all you have to do is run <tt>ant archive</tt> in the <tt>seamgen_example</tt> directory.  This will create a <tt>seamgen_example/dist</tt> directory with the <tt>seamgen_example.ear</tt> file in it.
</p>

<p class="wikiPara">
Deploy this example the same way we deployed the <tt>jee5/booking</tt> example.
</p>

<p class="wikiPara">
Check out the fruits of your labor at <a href="http://localhost:8080/seamgen_example" target="" class="regularLink">http://localhost:8080/seamgen_example</a>.
</p>

<h2 class="wikiHeadline2" id="H-WrapUp"><a href="/2008/11/04/seam-210-integration-with-glass-fish-v-2#H-WrapUp">Wrap up</a></h2>
<p class="wikiPara">
So this blog was a little longer than expected but we did deploy 3 applications not just 1 like the other interoperability blogs ;-)  These should give you a good starting point for your Seam own applications on GlassFish.
</p>

<p class="wikiPara">
For more details on installing GlassFish, and some of changes we made please see the <a href="http://docs.jboss.com/seam/2.1.0.SP1/reference/en-US/html/glassfish.html" target="" class="regularLink">Seam on GlassFish application server</a> reference guide chapter.
</p>

<p class="wikiPara">
<i class="wikiEmphasis">Update</i>: Some changes and fix's were recently made to the reference guide chapter.  This blog contains the latest information, and updates will be in the 2.1.1.CR1 release of seam.  </p>
</div>

