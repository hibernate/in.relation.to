---
title: "Using a different persistence provider with AS 7.0.1 "
author: "Scott Marlow"
blogger_name: "Scott"
creation_date: "18-08-2011"
original_tags: [JPA Hibernate JBoss AS]
tags: [JBoss AS,JPA]

relative_url: /2011/08/18/using-a-different-persistence-provider-with-as-701
slug: using-a-different-persistence-provider-with-as-701
lace: http://in.relation.to/21601.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2011/08/18/using-a-different-persistence-provider-with-as-701
---
<div id="documentDisplay" class="documentDisplay">


<h2 class="wikiHeadline2" id="H-AS701IsReleased"><a href="/2011/08/18/using-a-different-persistence-provider-with-as-701#H-AS701IsReleased">AS 7.0.1 is released!!!</a></h2>


<p class="wikiPara">
<a href="http://planet.jboss.org/post/jboss_as_7_0_1_released" target="" class="regularLink">AS 7.0.1 is released</a>, which includes improvements for using different persistence providers (beside the included Hibernate 4.0.0).  The framework is in place to plug in Hibernate 3.5 (or greater) persistence providers.  This addressed user feedback, that its important to use Hibernate 3.x on AS7, to give more time before migrating to Hibernate 4.0.0.  Switching your application to Hibernate 4.x, should be done as soon as possible.  Hibernate 4.0.0 has been modified to support the AS7 modular classloading environment and JBoss logging (and other many other improvements).  
</p>



<h2 class="wikiHeadline2" id="H-DropInAHibernate366FinalModule"><a href="/2011/08/18/using-a-different-persistence-provider-with-as-701#H-DropInAHibernate366FinalModule">Drop in a Hibernate 3.6.6.Final module</a></h2>


<p class="wikiPara">
By default, JPA applications will use Hibernate 4.0.0 with AS7, unless you add property <i class="wikiEmphasis">jboss.as.jpa.providerModule</i> set to <i class="wikiEmphasis">org.hibernate:3</i> to your persistence.xml properties list.  You also need to create an org.hibernate:3 module that represents the Hibernate 3.6.6.Final release jars that will be used by your application.  I downloaded the hibernate-distribution-3.6.6.Final for creating the new module.  
</p>



<h3 class="wikiHeadline3" id="H-StepsToCreateTheHibernate366FinalModule"><a href="/2011/08/18/using-a-different-persistence-provider-with-as-701#H-StepsToCreateTheHibernate366FinalModule">Steps to create the Hibernate 3.6.6.Final module</a></h3>



<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> Create as/modules/org/hibernate/3 folder</li>
<li class="wikiOrderedListItem"> Copy jars from the hibernate-distribution-3.6.6.Final folder into the as/modules/org/hibernate/3 folder</li>
<li class="wikiOrderedListItem"> Create as/modules/org/hibernate/3/module.xml file </li>
<li class="wikiOrderedListItem"> update your persistence.xml to use the org.hibernate:3 module</li>
</ol>

<pre class="wikiPreformatted">
&lt;!-- as/modules/org/hibernate/3/module.xml file --&gt;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;module xmlns="urn:jboss:module:1.0" name="org.hibernate" slot="3"&gt;
    &lt;resources&gt;
        &lt;resource-root path="hibernate3.jar"/&gt;
        &lt;resource-root path="javassist-3.12.0.GA.jar"/&gt;
        &lt;resource-root path="antlr-2.7.6.jar"/&gt;  
        &lt;resource-root path="commons-collections.jar"/&gt;  
        &lt;resource-root path="dom4j-1.6.1.jar"/&gt;  
        &lt;!-- Insert other Hibernate 3 jars to be used here --&gt;
    &lt;/resources&gt;
    &lt;dependencies&gt;
        &lt;module name="org.jboss.as.jpa.hibernate" slot="3"/&gt;
        &lt;module name="asm.asm"/&gt;
        &lt;module name="javax.api"/&gt;
        &lt;module name="javax.persistence.api"/&gt;
        &lt;module name="javax.transaction.api"/&gt;
        &lt;module name="javax.validation.api"/&gt;
        &lt;module name="org.apache.ant"/&gt;
        &lt;module name="org.infinispan"/&gt;
        &lt;module name="org.javassist"/&gt;
        &lt;module name="org.slf4j"/&gt;
    &lt;/dependencies&gt;
&lt;/module&gt;
</pre>


<pre class="wikiPreformatted">
&lt;!-- persistence.xml using Hibernate 3.6.6.Final --&gt;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;persistence xmlns="http://java.sun.com/xml/ns/persistence" version="1.0"&gt;
&lt;persistence-unit name="GameOfThrones_pu"&gt;
    &lt;description&gt;my Hibernate 3 persistence unit.&lt;/description&gt;
    &lt;jta-data-source&gt;java:jboss/datasources/gameDS&lt;/jta-data-source&gt;
    &lt;properties&gt;
        &lt;property name="jboss.as.jpa.providerModule" value="org.hibernate:3"/&gt;
    &lt;/properties&gt;
&lt;/persistence-unit&gt;
&lt;/persistence&gt;
</pre>


<p class="wikiPara">
<a href="https://github.com/jbossas/jboss-as/blob/master/testsuite/compat/src/test/java/org/jboss/as/testsuite/compat/jpa/hibernate/Hibernate3SharedModuleProviderTestCase.java" target="" class="regularLink">Example of an AS7 (Arquillian) unit test using the org.hibernate:3 module.</a>  Note that this test is @Ignored until we arrange for the org.hibernate:3 module to be created by the test build.
</p>

<p class="wikiPara">
I could of created a standalone application but I prefer to push the <a href="http://community.jboss.org/wiki/Arquillian" target="" class="regularLink">awesome Arquillian project! ;)</a>  I hope that you will contribute similar JPA tests to the AS7 project when you can.
</p>



<h2 class="wikiHeadline2" id="H-ExperimentalUseOfOGMOnAS701"><a href="/2011/08/18/using-a-different-persistence-provider-with-as-701#H-ExperimentalUseOfOGMOnAS701">Experimental use of OGM on AS 7.0.1</a></h2>


<p class="wikiPara">
I wanted to see if I could create an AS7 unit test that created a few entities with (<a href="http://hibernate.org/subprojects/ogm.html" target="" class="regularLink">OGM</a>).  To accomplish this, I checked out a <a href="https://github.com/hibernate/hibernate-ogm" target="" class="regularLink">copy of the OGM sources at</a> and built them.  
</p>

<pre class="wikiPreformatted">
cd work
git clone git://github.com/hibernate/hibernate-ogm.git
Cloning into hibernate-ogm...
  remote: Counting objects: 4371, done.
  remote: Compressing objects: 100% (1357/1357), done.
  remote: Total 4371 (delta 1694), reused 4262 (delta 1599)
  Receiving objects: 100% (4371/4371), 1.17 MiB, done.
  Resolving deltas: 100% (1694/1694), done.

cd hibernate-ogm
mvn clean install
... lots of output from building ogm jars....

Folder hibernate-ogm-core/target will contain hibernate-ogm-core-3.0.0-SNAPSHOT.jar 
</pre>


<p class="wikiPara">
Next, you need to build my experimental OGM branch for AS7 (oh yeah, you need a few tools <a href="http://maven.apache.org/download.html" target="" class="regularLink">maven</a> and <a href="http://git-scm.com/download" target="" class="regularLink">git</a>).
</p>

<pre class="wikiPreformatted">
cd ..
git clone git://github.com/scottmarlow/jboss-as.git
cd jboss-as
git checkout ogm
./build.sh clean install
OR build.bat clean install

</pre>


<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> Follow instructions above for creating the org.hibernate:3 module</li>
<li class="wikiOrderedListItem"> Create as/modules/org/hibernate/ogm folder</li>
<li class="wikiOrderedListItem"> Copy hibernate-ogm-core-3.0.0-SNAPSHOT.jar that you just built (from OGM build) into the as/modules/org/hibernate/ogm folder</li>
<li class="wikiOrderedListItem"> Create as/modules/org/hibernate/ogm/module.xml file </li>
<li class="wikiOrderedListItem"> update your persistence.xml to use the org.hibernate:3 module and org.hibernate:ogm providerModule.</li>
<li class="wikiOrderedListItem"> Create a local-only infinispan.xml for your application.</li>
</ol>


<pre class="wikiPreformatted">
&lt;!-- as/modules/org/hibernate/ogm/module.xml file --&gt;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;module xmlns="urn:jboss:module:1.0" name="org.hibernate" slot="ogm"&gt;
    &lt;resources&gt;
        &lt;resource-root path="hibernate-ogm-core-3.0.0-SNAPSHOT.jar"/&gt;
    &lt;/resources&gt;

    &lt;dependencies&gt;
        &lt;module name="org.jboss.as.jpa.hibernate" slot="3"/&gt;
        &lt;module name="org.hibernate" slot="3" export="true" /&gt;
        &lt;module name="javax.api"/&gt;
        &lt;module name="javax.persistence.api"/&gt;
        &lt;module name="javax.transaction.api"/&gt;
        &lt;module name="javax.validation.api"/&gt;
        &lt;module name="org.apache.ant"/&gt;
        &lt;module name="org.infinispan"/&gt;
        &lt;module name="org.javassist"/&gt;
        &lt;module name="org.slf4j"/&gt;
    &lt;/dependencies&gt;
&lt;/module&gt;
</pre>


<pre class="wikiPreformatted">
&lt;!-- persistence.xml using OGM --&gt;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;persistence xmlns="http://java.sun.com/xml/ns/persistence" version="1.0"&gt;
&lt;persistence-unit name="OGMExperiment_pu"&gt;
    &lt;description&gt;my OGM persistence unit.&lt;/description&gt;
    &lt;jta-data-source&gt;java:jboss/datasources/ExampleDS&lt;/jta-data-source&gt;
    &lt;properties&gt;
        &lt;property name="jboss.as.jpa.providerModule" value="org.hibernate:ogm"/&gt;
        &lt;property name="jboss.as.jpa.adapterModule" value="org.jboss.as.jpa.hibernate:3"/&gt;
        &lt;property name="hibernate.ogm.infinispan.configuration_resourcename" value="infinispan.xml"/&gt;
    &lt;/properties&gt;
&lt;/persistence-unit&gt;
&lt;/persistence&gt;
</pre>


<pre class="wikiPreformatted">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
  
&lt;!-- 
    infinispan.xml
    This is the testing configuration, running in LOCAL clustering mode to speedup tests.
--&gt;
&lt;infinispan
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="urn:infinispan:config:5.0 http://www.infinispan.org/schemas/infinispan-config-5.0.xsd"
    xmlns="urn:infinispan:config:5.0"&gt;

    &lt;global&gt;
    &lt;/global&gt;

    &lt;!-- *************************** --&gt;
    &lt;!--   Default cache settings    --&gt;
    &lt;!-- *************************** --&gt;

    &lt;default&gt;
    &lt;/default&gt;

    &lt;!-- *************************************** --&gt;
    &lt;!--     Cache to store the OGM entities     --&gt;
    &lt;!-- *************************************** --&gt;
    &lt;namedCache
        name="ENTITIES"&gt;
    &lt;/namedCache&gt;

    &lt;!-- *********************************************** --&gt;
    &lt;!--   Cache to store the relations across entities  --&gt;
    &lt;!-- *********************************************** --&gt;
    &lt;namedCache
        name="ASSOCIATIONS"&gt;
    &lt;/namedCache&gt;

    &lt;!-- ***************************** --&gt;
    &lt;!--   Cache to store identifiers  --&gt;
    &lt;!-- ***************************** --&gt;
    &lt;namedCache
        name="IDENTIFIERS"&gt;
    &lt;/namedCache&gt;

&lt;/infinispan&gt;

</pre>


<p class="wikiPara">
<a href="https://github.com/scottmarlow/jboss-as/blob/ogm/testsuite/compat/src/test/java/org/jboss/as/testsuite/compat/jpa/hibernate/OGMHibernate3SharedModuleProviderTestCase.java" target="" class="regularLink">To run the OGM unit test that I added</a> (after manually creating the org.hibernate:ogm module), run the unit test with these steps:
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> cd testsuite</li>
<li class="wikiOrderedListItem"> cd compat</li>
<li class="wikiOrderedListItem"> mvn clean install -DallTests</li>
</ol>

<p class="wikiPara">
The unit test will run one instance of AS7 and use Infinispan in local-only mode.  A few entities will be created (under a JTA transaction) and read back.  If you see error <q>org.jboss.as.testsuite.compat.jpa.hibernate.OGMHibernate3SharedModuleProviderTestCase: Could not deploy to container</q>, open the ./target/jbossas/standalone/log/server.log to see what went wrong (did you create the as/modules/org/hibernate/3 and as/modules/org/hibernate/ogm modules?)
</p>

<p class="wikiPara">
<a href="http://docs.jboss.org/hibernate/ogm/3.0/reference/en-US/html/index.html" target="" class="regularLink">See OGM documentation for more about OGM.</a>
</p>

<p class="wikiPara">
Like I said before, using OGM on AS7, is experimental at this point. ;)
</p>



<h2 class="wikiHeadline2" id="H-AS701JPADocumentation"><a href="/2011/08/18/using-a-different-persistence-provider-with-as-701#H-AS701JPADocumentation">AS 7.0.1 JPA documentation</a></h2>


<p class="wikiPara">
<a href="https://docs.jboss.org/author/display/AS7/JPA+Reference+Guide" target="" class="regularLink">The documentation for AS7 JPA is available here</a>.
</p>



<h2 class="wikiHeadline2" id="H-UsingEclipseLink"><a href="/2011/08/18/using-a-different-persistence-provider-with-as-701#H-UsingEclipseLink">using EclipseLink</a></h2>


<p class="wikiPara">
I started a new <a href="https://github.com/scottmarlow/jpa-modules" target="" class="regularLink">git repo for working on EclipseLink</a> integration.  This will require coordination with the EclipseLink project as changes are probably required there as well. <a href="http://wiki.eclipse.org/Using_EclipseLink_JPA_Extensions_%28ELUG%29" target="" class="regularLink">EclipseLink has the eclipselink.target.server property</a> that can be set to JBoss but that doesn't support AS7 yet.  Also, we need to <a href="https://issues.jboss.org/browse/AS7-886" target="" class="regularLink">fix the PersistenceUnitMetadata.getNewTempClassLoader()</a> in AS7.  Depending on the level of interest, the EclipseLink integration in AS7 will come together (more of the work may be inside of the EclipeLink project itself).
</p>



<h2 class="wikiHeadline2" id="H-CommunityContributionsAreWelcome"><a href="/2011/08/18/using-a-different-persistence-provider-with-as-701#H-CommunityContributionsAreWelcome">Community contributions are welcome</a></h2>


<p class="wikiPara">
<a href="http://community.jboss.org/choose-container!input.jspa?contentType=1&amp;containerType=14&amp;container=2279" target="" class="regularLink">Please continue to ask/answer questions on</a> the AS7 user discussion forums.  I would like to work with a few more community members on further code changes to the JPA integration support in AS7.  If you would like to volunteer, find Scott Marlow on IRC (irc://irc.freenode.org/jboss-as7).  As well as working on integration support with other persistence providers.
</p>

</div>

