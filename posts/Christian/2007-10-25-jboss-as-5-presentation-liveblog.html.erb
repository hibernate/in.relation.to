---
title: "JBoss AS 5 presentation liveblog"
author: "Christian Bauer"
blogger_name: "Christian"
creation_date: "25-10-2007"
original_tags: []
tags: [JBoss AS]

relative_url: /2007/10/25/jboss-as-5-presentation-liveblog
slug: jboss-as-5-presentation-liveblog
lace: http://in.relation.to/2663.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2007/10/25/jboss-as-5-presentation-liveblog
---
<div id="documentDisplay" class="documentDisplay">


<div style="float:right; border-width: 1px;border-style: solid ; border-color: gray; padding: 5px; margin-left:10px; margin-bottom:10px;">
<a href="/service/File/2667" target="" class="regularLink"><img src="/images/2667.jpeg"></a>
</div>

<p class="wikiPara">
Mark Newton presents JBoss application server 5.0 <q>What's New</q> at the JUG Switzerland.
</p>

<h2 class="wikiHeadline2" id="H-HistoryOfJBossAS"><a href="/2007/10/25/jboss-as-5-presentation-liveblog#H-HistoryOfJBossAS">History of JBoss AS</a></h2>

<p class="wikiPara">
119 days average release cycle, 9 releases of JBoss 3.2.x, J2EE 1.3 certification, JDK 1.3.
</p>

<p class="wikiPara">
126 days average release cycle, 6 releases of JBoss 4.0.x, J2EE 1.4 certification, JDK 1.4.
</p>

<p class="wikiPara">
55 days average release cycle, 3 releases of JBoss 4.2.x, JEE 5.0 compatible implementation, not certification, does 95% of it and requires JDK 5.0.
</p>

<p class="wikiPara">
For JBoss AS 5.0.x new standalone implementations:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> JBoss Messaging (replaces old JBoss MQ)</li>
<li class="wikiUnorderedListItem"> JBoss Security</li>
<li class="wikiUnorderedListItem"> JBoss Federated SSO</li>
</ul>

<p class="wikiPara">
New kernel is JBoss Microcontainer 2.0 and a profile service which is responsible for managing the POJOs that now bind the services together. Aiming for a Q1 2008 final release date and a CR in 2007.
</p>

<h2 class="wikiHeadline2" id="H-JBossMessaging14"><a href="/2007/10/25/jboss-as-5-presentation-liveblog#H-JBossMessaging14">JBoss Messaging 1.4</a></h2>

<p class="wikiPara">
The new JMS 1.1 compatible messaging implementation supports distributed queues and topics as well as transparent failover and load distribution - internally it uses JGroups as transport. 
</p>

<h2 class="wikiHeadline2" id="H-Clustering"><a href="/2007/10/25/jboss-as-5-presentation-liveblog#H-Clustering">Clustering</a></h2>

<p class="wikiPara">
New major revision of JBoss Cache (2.1) with a much simpler API and a greater emphasis on usage outside of JBoss AS. 
</p>

<h2 class="wikiHeadline2" id="H-JBossAOP20"><a href="/2007/10/25/jboss-as-5-presentation-liveblog#H-JBossAOP20">JBoss AOP 2.0</a></h2>

<p class="wikiPara">
Integrated with the microcontainer: If you add behavior to a POJO using AOP, and you deploy it, you get dependency management - you can't call a POJO without the aspect, it won't be deployed before the aspect is available. And vice versa, aspects are not deployed if the POJOs they depend on are not deployed so far. Aspects can be bound to POJO lifecycle, e.g an aspect that binds a proxy into JNDI when the POJO enters the <q>deployed</q> state. It also has some new plain AOP features: Before, Afer, Throwing, Finally <q>flows</q> for interception.
</p>

<h2 class="wikiHeadline2" id="H-WhatDoesTheKernelDo"><a href="/2007/10/25/jboss-as-5-presentation-liveblog#H-WhatDoesTheKernelDo">What does the kernel do?</a></h2>

<p class="wikiPara">
A microkernel needs to support dynamic loading and unloading of services. For that we need:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> a way to <i class="wikiEmphasis">deploy</i> new services</li>
<li class="wikiUnorderedListItem"> a <i class="wikiEmphasis">bus</i> so that the client does not communicate with a service directly, clients are decoupled from services</li>
</ul>

<p class="wikiPara">
How was this done in JBoss 3.x and 4.x? We used an MBeanServer to provide the bus and deployers that load services into the kernel together with a simple dependency injection mechanism. MBeans were used to implement services and configured with XML descriptors which injected attribute values into the MBeans at deployment. XMBean are special MBeans that allow you to add method interception to an MBean. Calls pass through the bus and interceptors with a level of indirection through a generic <tt>invoke(method, arguments, argumentTypes)</tt> operation.
</p>

<p class="wikiPara">
For performance reasons the bus wasn't actually used much: A reference to a services would be looked up directly in the registry. So the interceptors were not used.
</p>

<p class="wikiPara">
What was bad about the JBoss JMX microkernel:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> JMX is restrictive, lifecycle and classloading were a problem</li>
<li class="wikiUnorderedListItem"> You can't run JMX on Java ME</li>
<li class="wikiUnorderedListItem"> You actually need to know how to implement MBeans</li>
<li class="wikiUnorderedListItem"> If you access services directly through a reference, interceptors are not applied</li>
</ul>

<h2 class="wikiHeadline2" id="H-DesignObjectivesForJBossAS5x"><a href="/2007/10/25/jboss-as-5-presentation-liveblog#H-DesignObjectivesForJBossAS5x">Design objectives for JBoss AS 5.x</a></h2>

<p class="wikiPara">
Services should be POJOs and behavior should be added through AOP - effectively reproducing all the features of the JMX microkernel. Much improved dependency injection and classloading. Layered and easily extensible design (no references to JBoss classes), should be usable without JBoss AS.
</p>

<p class="wikiPara">
The new name for this kernel is <i class="wikiEmphasis">Microcontainer</i>.
</p>

<p class="wikiPara">
The core of the microcontainer is <i class="wikiEmphasis">Container</i>, <i class="wikiEmphasis">Kernel</i>, <i class="wikiEmphasis">Dependency</i>. Behavior is added with JBoss AOP. 
</p>

<p class="wikiPara">
Kernel: Provides the bus and registry, and an event manager.
</p>

<p class="wikiPara">
Container: Wrapper for POJOs, AOP jointpoints and reflection on the actual service implementation POJO.
</p>

<p class="wikiPara">
Dependency: Basically an abstract state machine that manages service dependencies.
</p>

<p class="wikiPara">
Some optional packages on top of the core: OSGI integration, Guice integration.
</p>

<h2 class="wikiHeadline2" id="H-CreatingAService"><a href="/2007/10/25/jboss-as-5-presentation-liveblog#H-CreatingAService">Creating a service</a></h2>

<p class="wikiPara">
Define the POJO with <tt>&lt;bean&gt;</tt> and <tt>&lt;property&gt;</tt> declarations in <tt>jboss-beans.xml</tt> (replaces the old jboss-service.xml). Beans have a name and a class, properties support injection with references to (other) bean names.
</p>

<p class="wikiPara">
Add behavior using the <tt>&lt;aop:aspect&gt;</tt> namespace and elements and pointcut expressions. You can also extract the aspect/pointcut to a separate file.
</p>

<h2 class="wikiHeadline2" id="H-ProfileService"><a href="/2007/10/25/jboss-as-5-presentation-liveblog#H-ProfileService">Profile service</a></h2>

<p class="wikiPara">
Management system for POJOs instead of the old JMX based administration which was based on editing XML files. People would manage configurations by keeping these files in CVS. The web console only supported changing the runtime values in memory, didn't write back into the files.
</p>

<p class="wikiPara">
What we want:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Centralized maintenance as profiles, e.g. all, minimal, default, ...</li>
<li class="wikiUnorderedListItem"> Persistence of changes made to a profile across server restarts</li>
<li class="wikiUnorderedListItem"> Propagation of profile changes across a cluster</li>
<li class="wikiUnorderedListItem"> Versioning of profiles</li>
</ul>

<p class="wikiPara">
Implementation similar to JDK 6 Open MBeans specification: A deployment has a collection of ManagedObjects, you define them with annotations in your service, e.g. <tt>@ManagedOperation(description="A setting you can change")</tt>
</p>

<h2 class="wikiHeadline2" id="H-Summary"><a href="/2007/10/25/jboss-as-5-presentation-liveblog#H-Summary">Summary</a></h2>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> JBoss AS 5.0 has a completely new architecture based on the microcontainer with POJOs and AOP</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Management improved with the addition of profile service</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Clustering and security is much enhanced</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> It will be fully Java EE 5.0 compliant</li>
</ul>






</div>

