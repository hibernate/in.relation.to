---
title: "Oracle evolution observed"
author: "Christian Bauer"
blogger_name: "Christian"
creation_date: "07-08-2004"
original_tags: []
tags: []

relative_url: /2004/08/07/oracle-evolution-observed
slug: oracle-evolution-observed
lace: http://in.relation.to/1282.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2004/08/07/oracle-evolution-observed
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
I just cleaned up some of my files and found <a href="http://hibernate.org/~turin/img/sqlconsole.jpg" target="" class="regularLink">this snapshot </a> in one of my folders. I made it two weeks ago, as I finally had time to install Oracle 10g. I remember how I was shaking my head in desperation as I realized what they had done. Let me explain.
</p>

<p class="wikiPara">
Back in the days of Oracle8, they decided to write their system installer tools in Java. They apparently had no idea what Java was about, so what we got was the most hated and horrible application installer you can imagine. It required a patched/hacked JDK, which was en vogue at this time, especially in big corporations with mediocre programmers. Usually, some poor guys were forced to use Java, and their CTO/VPs made them suffer. So, naturually, they passed that on to their users. But at least it worked, if you knew the workarounds. At some point, you had a working Oracle installation (the first Linux versions were also quite interesting...).
</p>

<p class="wikiPara">
But this wasn't good enough for Oracle. They had a hacked JRE, their own window and widget toolkit, their own application framework, just for the installer. Hey, why not use this for /all/ Oracle applications?  Adminstration tools, wizards, SQL console, all of them! Great idea! I first came in contact with the new Oracle Enterprise Manager in Oracle 8.1.x (I don't even want to know when it first reared it's ugly head in public). It was horrible. Well, actually you could do some useful things on Linux and Solaris which you only could do with 3rd party tools on Windows before, like browsing your database catalog graphically. But it wasn't that useful in practice. Want to have a quick look at a table's content? Sure, fire up the SQL console, there is no <q>Quick select</q>. You need more power in the SQL console than a trivial history of your queries? Autocompletion? PL/SQL editors? Use one of our full blown IDE's or buy a third party tool. But it was OK, in the end. Together with PL/SQL developer, I coded away on a stored procedure app for more than a year. Painful, but interesting.
</p>

<p class="wikiPara">
It even got better with Oracle 9; finally the Oracle Enterprise Manager was a nice (albeit still a hacked JRE and proprietary toolkit) application that you could actually use in your daily work. At this point I had given up on stored procedure business logic and moved to ORM. Long story short, Oracle finally had good GUI management tools. Not perfect, but quite OK. Even the SQL consoles were sometimes usable: they had three different options, each one had different features, and each one had other features missing. Laughable, compared to other vendors, but in the world of Oracle, <q>acceptable</q>.
</p>

<p class="wikiPara">
Fast forward: Oracle 10g. Installed it two weeks ago on a Linux box. It was pain (and I really know how to install Oracle...) and suffering. I didn't realize that they dropped the classic Oracle Enterprise Manager until I had to debug the startup code for the replacement: A web-based <q>database control</q>, that runs in a bastardized Apache/OAS/BC4J environment. Yes, you need a full application server now, just to have some basic management tools for your database (that is, if you don't have the old OEM 9.x around somewhere). Hundreds of megabytes of memory on the server are needed. You might also ask if this new web-based interface is better than the old desktop (client/server concept though) enterprise management tools. A web-based interface for daily work better than a GUI frontend? Surely not.
</p>

<p class="wikiPara">
But wait, it gets worse. Remember that screenshot I have found? It shows <q>isqlplus</q>, the newest incarnation of the never-dying SQLplus console. Yes, it's primary use is to execute SQL. The old CLI-based sqlplus tool had some real good value in the early days, like flexible formatting control of the result printout for reporting, etc. The two graphical tools we got with Oracle 8 and 9 have been really bad, but at least they are quick to start and use. Now look at this new <q>isqlplus</q>. A textarea, a submit button, some primitive history functionality. This is a standalone product now with all the bells and whistles. It looks like it even has its own instance of the application server (at least it has its own TCP port). It probably even has it's own development group and VPs.
</p>

<p class="wikiPara">
This is called progress. Thanks Oracle. 
</p>

<p class="wikiPara">
(I didn't have time to check if the <q>Oracle 10g Grid Manager Foo</q> is actually the rebranded old Enterprise Manager. There is still hope...)
</p>
</div>

