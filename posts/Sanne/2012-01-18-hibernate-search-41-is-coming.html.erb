---
title: "Hibernate Search 4.1 is coming"
author: "Sanne Grinovero"
blogger_name: "Sanne"
creation_date: "18-01-2012"
original_tags: [Hibernate Search]
tags: [Hibernate Search]

relative_url: /2012/01/18/hibernate-search-41-is-coming
slug: hibernate-search-41-is-coming
lace: http://in.relation.to/22766.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2012/01/18/hibernate-search-41-is-coming
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
We tagged Hibernate Search <i class="wikiEmphasis">4.1.0.Alpha1</i>, and artifacts are now ready to be downloaded.
4.1 is meant to mainly upgrade the core dependencies and will have a quick development cycle.
</p>

<h1 class="wikiHeadline1" id="H-UpgradedDependencies"><a href="/2012/01/18/hibernate-search-41-is-coming#H-UpgradedDependencies">Upgraded dependencies</a></h1>
<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Apache Lucene 3.5</li>
<li class="wikiUnorderedListItem"> Infinispan 5.1</li>
<li class="wikiUnorderedListItem"> JGroups 3.0</li>
</ul>

<p class="wikiPara">
To use the above versions, upgrading is required as each of the mentioned projects changed some of its API used by Hibernate Search. Of course
Hibernate Search shields you from these changes being fully backwards compatible.
</p>

<h1 class="wikiHeadline1" id="H-MassIndexerPerformance"><a href="/2012/01/18/hibernate-search-41-is-coming#H-MassIndexerPerformance">MassIndexer performance</a></h1>
<p class="wikiPara">
The MassIndexer is quick again!
To be honest this is not an improvement but is a bugfix of a performance regression. If you noticed a performance drop in mass indexing using 4.0.0.Final, please try again with this new release and you will see a significant improvement.
While working towards 4.1 final we're going to improve it's features and possibly performance even more, finally taking advantage of the
new internal design provided by 4.0.
</p>

<h1 class="wikiHeadline1" id="H-GreatContributions"><a href="/2012/01/18/hibernate-search-41-is-coming#H-GreatContributions">Great contributions</a></h1>
<p class="wikiPara">
Guillaume Smet identified and fixed a regression for which dirty collections would not be re-indexed when having a custom <u>FieldBridge</u> instead of the standard <u>@IndexedEmbedded</u>.
</p>

<p class="wikiPara">
Davide D'Alto improved the algorithm identifying the elements which need to be loaded and re-indexed: it's now able to avoid some unnecessary database loads in specific use cases having complex relations, consequently also reducing the index size.
</p>

<h1 class="wikiHeadline1" id="H-TheUsualLinks"><a href="/2012/01/18/hibernate-search-41-is-coming#H-TheUsualLinks">The usual links</a></h1>
<p class="wikiPara">
As always distribution bundles are available from <a href="https://sourceforge.net/projects/hibernate/files/hibernate-search/4.1.0.Alpha1/" target="" class="regularLink">Sourceforge</a>, or you can get it via <a href="http://www.hibernate.org/subprojects/search/download.html" target="" class="regularLink">Maven artifacts</a>.
User questions are welcome on <a href="https://forum.hibernate.org/viewforum.php?f=9" target="" class="regularLink">the forums</a>, bugs and improvements can be discussed on <a href="http://hibernate.org/community" target="" class="regularLink">the mailing list</a> or posted to <a href="https://hibernate.onjira.com/browse/HSEARCH" target="" class="regularLink">JIRA</a> directly, possibly with unit tests.
</p>

<p class="wikiPara">
Complete details of all changes are <a href="https://hibernate.onjira" target="" class="regularLink">tracked on JIRA</a>.
</p>
</div>

