---
title: "Beer, eclipse plugin code coverage and a useful source lookup"
author: "Max Andersen"
blogger_name: "Max"
creation_date: "09-04-2008"
original_tags: [Code Coverage,EclEmma,Eclipse]
tags: [Eclipse,Java EE]

relative_url: /2008/04/09/beer-eclipse-plugin-code-coverage-and-a-useful-source-lookup
slug: beer-eclipse-plugin-code-coverage-and-a-useful-source-lookup
lace: http://in.relation.to/8814.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2008/04/09/beer-eclipse-plugin-code-coverage-and-a-useful-source-lookup
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
I recently got invited by Gilles J. Iachelini to join a <a href="http://dev.eclipse.org/mhonarc/lists/switzerland-east-ec/msg00003.html" target="" class="regularLink">beer bash</a> in Bern, Switzerland on the 15th April. 
</p>

<p class="wikiPara">
It's arranged by the Swiss East Eclipse user group so if you are around and interested in Eclipse and JBoss Tools come and say Hi.
</p>

<p class="wikiPara">
Giles invite reminded me of a few other things I wanted to spread the word about...
</p>

<h1 class="wikiHeadline1" id="H-EclipsePluginCodeCoverage"><a href="/2008/04/09/beer-eclipse-plugin-code-coverage-and-a-useful-source-lookup#H-EclipsePluginCodeCoverage">Eclipse Plugin Code Coverage</a></h1>

<p class="wikiPara">
I met Gilles while I were at EclipseCon and he were doing an <a href="http://www.eclemma.org/" target="" class="regularLink">EclEmma</a> tutorial together with Marc R. Hoffman.
</p>

<p class="wikiPara">
EclEmma is really nice Eclipse plugin that makes it ultrasimple to run a normal Java project and get code coverage information via <a href="http://emma.sourceforge.net/" target="" class="regularLink">Emma</a>.
</p>

<p class="wikiPara">
But since I mostly develop plugins these days I were more interested in using it with Eclipse which is a pain with any other code coverage tools I have tried.
</p>

<p class="wikiPara">
Luckily Marc showed me a very simple trick to get Emma to do code coverage for any Eclipse plugin. 
</p>

<p class="wikiPara">
You basically just add their special EclEmma plugin next to the <code>org.eclipse.osgi</code> plugin and then run Eclipse with </p>
<pre class="wikiPreformatted">-Dosgi.framework.extensions=com.mountainminds.eclemma.osgihook</pre>
 
This allows Emma to be used to enhance any classes loaded by Eclipse runtime and here by be able to generate a code coverage html report and Emma session file when Eclipse exit.


<p class="wikiPara">
The HTML report can be directly viewed in a browser but will not include classes that were not loaded, but if you load the Emma session file with EclEmma you can get those statistics too.
</p>

<p class="wikiPara">
<a href="FileNotFound" target="" class="brokenLink">?BROKEN LINK?</a>
</p>

<p class="wikiPara">
Extremely simple and straightforward.
</p>

<p class="wikiPara">
I hope Marc will integrate this soon into EclEmma so it becomes even easier to run. 
</p>

<p class="wikiPara">
You can read the details about this trick  on <a href="http://www.eclemma.org/research/instrumentingosgi/index.html" target="" class="regularLink">EclEmma website</a>
</p>

<h1 class="wikiHeadline1" id="H-UsefulSourceproviderLookup"><a href="/2008/04/09/beer-eclipse-plugin-code-coverage-and-a-useful-source-lookup#H-UsefulSourceproviderLookup">Useful sourceprovider lookup</a></h1>

<p class="wikiPara">
Another useful plugin comes from our own Rob Stryker which the other day got annoyed when he were debugging four different versions of Eclipse and WTP combinations.
</p>

<p class="wikiPara">
He were being fed up with having to constantly setup the matching plugins and source in the debugger. All the current source-lookup options assumes you point to unpacked sources or single archives. That just does not cut it when it comes to Eclipse which consists of multiple src.zip files spread across multiple directories.
</p>

<p class="wikiPara">
Hence Rob created a sourceprovider that can be added to any Debug launch and then tell it about the root directory of an Eclipse installation and it recursively scans for src.zip files and adds it as a place where Eclipse will look for sources.
</p>

<p class="wikiPara">
A great time saver, also for non-eclipse projects that has many src.zip files.
</p>

<p class="wikiPara">
The  <code>org.jboss.tools.labs.pde.sourceprovider</code> is available in source form from <a href="http://anonsvn.jboss.org/repos/jbosstools/trunk/labs/plugins/org.jboss.tools.labs.pde.sourceprovider/" target="" class="regularLink">JBoss Tools svn</a>
</p>




</div>

