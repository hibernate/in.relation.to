---
title: "Using a seam-gen project in JBoss Tools"
author: "Dan Allen"
blogger_name: "Dan"
creation_date: "03-11-2008"
original_tags: [Eclipse,JBoss Tools,Seam,SeamGen]
tags: [Eclipse,JBoss Tools,Seam]

relative_url: /2008/11/03/using-a-seamgen-project-injboss-tools
slug: using-a-seamgen-project-injboss-tools
lace: http://in.relation.to/9740.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2008/11/03/using-a-seamgen-project-injboss-tools
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
The Seam distribution includes a tool named seam-gen to help you get started quickly using Seam. The tool collects information from you about your project and then uses that information to create a project structure. It can also generate a CRUD application by reverse engineering your database schema and generate various forms of stub code. In this entry, you'll learn how to get the generated project setup in Eclipse so that you can leverage the available tooling.
</p>

<h2 class="wikiHeadline2" id="H-TwoToolsOneGoal"><a href="/2008/11/03/using-a-seamgen-project-injboss-tools#H-TwoToolsOneGoal">Two tools, one goal</a></h2>

<p class="wikiPara">
There are actually two interfaces to seam-gen. The first is the commandline script named seam, which resides at the root of the Seam distribution. When we talk about seam-gen, we are usually referring to this script. There is also new project wizard in <a href="http://www.jboss.org/tools" target="" class="regularLink">JBoss Tools</a> (the open source project behind <a href="http://www.jboss.com/products/devstudio" target="" class="regularLink">JBoss Developer Studio</a>) that is a complement to this script. Both tools share the same FreeMarker templates inside the seam-gen directory of the Seam distribution to produce the Java code, Facelets views, and TestNG configuration. Aside from these common templates, the two tools work independently of one another in setting up a Seam project. The projects they generate differ in one fundamental way, though. The commandline tool produces projects that are built using Ant, while the JBoss Tools new project wizard creates projects that are build purely with Eclipse builders.
</p>

<p class="wikiPara">
As you'd expect, when you create a project using the Eclipse plug-in, you can immediately start taking advantage of the tooling support for Seam in your project. However, like me, you may find it important to have a project that can be built outside of Eclipse using Ant. That means creating the project using the seam-gen commandline script. Don't fear that by creating the project outside of Eclipse, that the IDE is reduced to a syntax checker and Java compiler. The purpose of this article is to demonstrate how to fully activate the Seam tooling in Eclipse for projects created using the seam-gen commandline script, bringing you the best of both worlds. Plus, once the Seam tooling is activated, you can generate the CRUD application or stub code from either Eclipse or the commandline script.
</p>

<h2 class="wikiHeadline2" id="H-Step1CreateTheProjectWithSeamgenIeTheCommandlineScript"><a href="/2008/11/03/using-a-seamgen-project-injboss-tools#H-Step1CreateTheProjectWithSeamgenIeTheCommandlineScript">Step 1. Create the project with seam-gen (i.e., the commandline script)</a></h2>

<p class="wikiPara">
There are plenty of tutorials available for how to use seam-gen to create a project. You can find one in the <a href="http://docs.jboss.com/seam/2.1.0.SP1/reference/en-US/html/gettingstarted.html" target="" class="regularLink">Seam reference guide</a> and another in chapter 2 of <a href="http://mojavelinux.com/seaminaction" target="" class="regularLink">Seam in Action</a>. Let's just quickly review the steps for completeness.
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> Download and extract the Seam 2.x distribution</li>
<li class="wikiOrderedListItem"> If on Linux or Mac, run <pre class="wikiPreformatted">chmod 755 seam</pre>
 from the root of the distribution to make the seam script executable</li>
<li class="wikiOrderedListItem"> Make sure the JAVA_HOME environment variable is defined and it points to a JDK installation (&gt;= 1.5)</li>
<li class="wikiOrderedListItem"> In a terminal window, change your working directory to the Seam distribution and execute seam setup on Windows or ./seam setup on Linux or Mac (optionally, you can put the Seam distribution in your PATH to use seam like a system command)</li>
<li class="wikiOrderedListItem"> Execute the seam script again, this time supplying it the create-project command</li>
</ol>

<p class="wikiPara">
Your project is now created. The next step is to get the JBoss Tools plug-in for Eclipse installed so that you can use the Seam tooling once you get the project imported into Eclipse.
</p>

<h2 class="wikiHeadline2" id="H-Step2InstallTheJBossToolsPluginForEclipse"><a href="/2008/11/03/using-a-seamgen-project-injboss-tools#H-Step2InstallTheJBossToolsPluginForEclipse">Step 2. Install the JBoss Tools plug-in for Eclipse</a></h2>

<p class="wikiPara">
If you are using <a href="http://www.jboss.com/products/devstudio" target="" class="regularLink">JBoss Developer Studio</a>, you can skip this step. JBoss Developer Studio comes with all the plug-ins you need to develop Seam applications (plus support). These instructions explain how to install the latest stable version of JBoss Tools, which should be used with Eclipse 3.3 (Europa). You can also install the development version, which works with Eclipse 3.4 (Ganymede).
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> Download the <q>Eclipse IDE for Java EE Developers</q> via <a href="http://www.eclipse.org/downloads/moreinfo/jee.php" target="" class="regularLink">eclipse.org</a>. JBoss Tools relies on the Eclipse Web Tools project and several other plug-ins that come with that distribution.</li>
<li class="wikiOrderedListItem"> Select the menu item Help &gt; Software Updates &gt; Find and Install...</li>
<li class="wikiOrderedListItem"> Choose the option Search for new features to install</li>
<li class="wikiOrderedListItem"> Click the button New Remote Site...</li>
<li class="wikiOrderedListItem"> Enter the following values in the form:<br><b>Name:</b> JBoss Tools Stable Updates<br><b>URL:</b> http://download.jboss.org/jbosstools/updates/stable</li>
<li class="wikiOrderedListItem"> Click Finish</li>
<li class="wikiOrderedListItem"> Check the option JBoss Tools Stable Updates and advance through the rest of the wizard</li>
<li class="wikiOrderedListItem"> Go get coffee while the plug-ins download</li>
<li class="wikiOrderedListItem"> Click Install All when the download completes and allow Eclipse to restart when the install is done</li>
</ol>

<p class="wikiPara">
JBoss Tools is now installed. If you are interested in seeing other ways to install JBoss Tools, refer to <a href="http://www.jboss.org/community/docs/DOC-10044" target="" class="regularLink">this page</a> on the JBoss Wiki.
</p>

<h2 class="wikiHeadline2" id="H-Step3ImportTheProjectIntoEclipse"><a href="/2008/11/03/using-a-seamgen-project-injboss-tools#H-Step3ImportTheProjectIntoEclipse">Step 3. Import the project into Eclipse</a></h2>

<p class="wikiPara">
When seam-gen creates a project, it also generates Eclipse project files. Therefore, Eclipse will recognize the project directory as a valid Eclipse project. You simply need to use the Eclipse project import wizard.
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> In Eclipse, select File &gt; Import project... and choose the Existing project into Workspace option<br><br><img src="/images/9732.png" width="550" height="402">
</li>
<li class="wikiOrderedListItem"> Browse to the location of the generated project and Eclipse should recognize the project<br><br><img src="/images/9733.png" width="551" height="500">
</li>
<li class="wikiOrderedListItem"> Click Finish</li>
</ol>

<p class="wikiPara">
As soon as Eclipse imports the project you should notice output from Ant in the Console view. As I mentioned earlier, projects created with seam-gen use Ant to build and Eclipse drives those Ant tasks.
</p>

<blockquote class="wikiBlockquote">

<strong>NOTE</strong>
You should immediately right click on your project in the Project Explorer and select Refresh. This step gets Eclipse to recognize the output files from the Ant build that runs after the import. The Hibernate Console plug-in is then able to find the persistence unit configuration so you can open a session factory and start using it.

</blockquote>

<p class="wikiPara">
You're seam-gen project is now a JBoss Tools Seam project! That means you can take advantage of the core Seam tooling. However, you cannot yet use the code generation. You need to inform JBoss Tools where your Seam runtime is in order to do things such as create a new Seam action.
</p>

<h2 class="wikiHeadline2" id="H-Step4AttachTheProjectToTheSeamRuntime"><a href="/2008/11/03/using-a-seamgen-project-injboss-tools#H-Step4AttachTheProjectToTheSeamRuntime">Step 4. Attach the project to the Seam runtime</a></h2>

<p class="wikiPara">
JBoss Tools needs to know where the Seam distribution is because that is where the shared code generation templates are that I mentioned earlier. To make that connection, right click on the root node of the project and select Properties. Select the Seam Settings in the sidebar of the window that appears to bring up the Seam settings properties sheet as shown here.
</p>

<p class="wikiPara">
<img src="/images/9735.png" width="600" height="451">
</p>

<p class="wikiPara">
To fully activate the Seam support, you need to create a Seam runtime.
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> Click on the Add... button to open the dialog for defining a new runtime</li>
<li class="wikiOrderedListItem"> Browse to the location of the Seam distribution where you created the project, choose a name for the runtime, and select version 2.0.<br><br><img src="/images/9734.png" width="525" height="311">
</li>
<li class="wikiOrderedListItem"> When you are done, click Finish</li>
</ol>

<p class="wikiPara">
You should see that most of the form fields in the Seam settings property sheet are now active. However, you still need to establish a (database) connection profile.
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> Click New... to open the dialog to define a new connection</li>
<li class="wikiOrderedListItem"> Select a connection type (HSQLDB or Generic JDBC)</li>
<li class="wikiOrderedListItem"> Progress through the wizard using the same connection information you used when creating the project</li>
</ol>

<p class="wikiPara">
The Seam property sheet should now be fully populated, as shown here:
</p>

<p class="wikiPara">
<img src="/images/9737.png" width="600" height="714">
</p>

<p class="wikiPara">
You will now be able to use all of the code generation tasks in JBoss Tools without having to go back to the commandline to run the seam script. For instance, if you select File &gt; Other... &gt; Seam Generate Entities, you can create a CRUD application by reverse engineering the database defined in the Hibernate console configuration. (The latest version of the Seam tools even offers <a href="http://docs.jboss.org/tools/whatsnew/images/selective_seam_generate_entities.png" target="" class="regularLink">selective generation of entities</a>).
</p>

<p class="wikiPara">
<img src="/images/9731.png" width="551" height="401">
</p>

<p class="wikiPara">
Once the code generation completes, you can open one of the Seam components by name using the Open Seam Component dialog:
</p>

<p class="wikiPara">
<img src="/images/9736.png" width="600" height="301">
</p>

<p class="wikiPara">
JBoss Tools also provides EL completion, such as in a Facelets view:
</p>

<p class="wikiPara">
<img src="/images/9730.png" width="560" height="197">
</p>

<p class="wikiPara">
You can also use the <a href="http://docs.jboss.org/tools/whatsnew/hibernate/images/dynamicsqlhighlighting.png" target="" class="regularLink">Hibernate Console</a>, the <a href="http://docs.jboss.org/tools/whatsnew/images/enhance_pagesxmleditor.png" target="" class="regularLink">Seam page descriptor editor</a>, the <a href="http://docs.jboss.org/tools/whatsnew/seam/componentsxmleditor.png" target="" class="regularLink">Seam component descriptor editor</a>, and so on. In fact, for the most part, you are able to work with your seam-gen project in JBoss Tools as if you had created the project using the Seam Web Project wizard in JBoss Tools. However, as of Seam 2.1, one features that you lose when you start with the commandline version of seam-gen is incremental deployment of the application through the Eclipse tooling.
</p>

<h2 class="wikiHeadline2" id="H-Step5DeployTheApplicationToJBossAS"><a href="/2008/11/03/using-a-seamgen-project-injboss-tools#H-Step5DeployTheApplicationToJBossAS">Step 5. Deploy the application to JBoss AS</a></h2>

<p class="wikiPara">
In order to deploy a seam-gen application to JBoss AS, you have to use the Ant targets in the project build file, even when developing in Eclipse. But you can drive those Ant tasks from Eclipse.
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> Choose Window &gt; Show View &gt; Ant to bring up the Ant view</li>
<li class="wikiOrderedListItem"> Right click in the Ant view and select Add buildfiles...</li>
<li class="wikiOrderedListItem"> Select the build.xml at the root of the project</li>
<li class="wikiOrderedListItem"> When the Ant tree appears, expand it and scroll down to the explode target.<br><br><img src="/images/9728.png" width="254" height="591">
</li>
<li class="wikiOrderedListItem"> Double click on the explode target to deploy the application to JBoss AS as an exploded archive</li>
</ol>

<p class="wikiPara">
You can start JBoss AS either from the commandline or by setting up a JBoss AS runtime in Eclipse. However, as I mentioned in the last section, JBoss Tools cannot natively deploy a project created by seam-gen to the JBoss AS runtime at the moment. We are working on improving seam-gen to setup the Eclipse project so that the native incremental deployment works out of the box. Until then, you can still take advantage of incremental hot deployment because the explode Ant task is tied to the auto-build mechanism in Eclipse.
</p>

<h2 class="wikiHeadline2" id="H-Step6DebugTheApplication"><a href="/2008/11/03/using-a-seamgen-project-injboss-tools#H-Step6DebugTheApplication">Step 6. Debug the application</a></h2>

<p class="wikiPara">
If you start JBoss AS in debug mode, you can attach the Eclipse debugger to it by clicking on arrow next to the debug icon in the main toolbar and selecting debug-jboss-&lt;projectName&gt;, where &lt;projectName&gt; is the name you assigned to the project. (Close and open the project again if you don't see this option).
</p>

<p class="wikiPara">
<img src="/images/9729.png" width="248" height="171">
</p>

<p class="wikiPara">
The debugger connects to JBoss AS as a Remote Java Application.
</p>

<h2 class="wikiHeadline2" id="H-IntelliJIDEASneakPeak"><a href="/2008/11/03/using-a-seamgen-project-injboss-tools#H-IntelliJIDEASneakPeak">IntelliJ IDEA Sneak Peak</a></h2>

<p class="wikiPara">
If you checkout Seam from SVN and use the seam script to create a new project, you can import that project into IntelliJ IDEA and take advantage of the Seam tooling provided in IntelliJ IDEA 8. IntelliJ IDEA 8 offers wide range of Seam tooling support, including EL completion, validation, and refactoring. You can check out a screencast of the new features <a href="http://www.jetbrains.com/idea/training/demos/seam-development.html" target="" class="regularLink">here</a>.
</p>

<h2 class="wikiHeadline2" id="H-Summary"><a href="/2008/11/03/using-a-seamgen-project-injboss-tools#H-Summary">Summary</a></h2>

<p class="wikiPara">
This tutorial demonstrated that you are able to use the Seam tooling provided by JBoss Tools for projects created using seam-gen. You learned how to import the project into Eclipse, setup a Seam runtime, configure a connection profile, and deploy and debug the application on JBoss AS. You also got a little sneak peak at the parallel tooling support for Seam in IntelliJ IDEA 8.</p>
</div>

