---
title: "Prototype of page actions available in Seam 3"
author: "Dan Allen"
blogger_name: "Dan"
creation_date: "30-05-2009"
original_tags: [Seam]
tags: [Seam]

relative_url: /2009/05/30/prototype-of-page-actions-available-in-seam-3
slug: prototype-of-page-actions-available-in-seam-3
lace: http://in.relation.to/11643.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2009/05/30/prototype-of-page-actions-available-in-seam-3
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
Before I start, I want to mention that Seam 3 is extremely green right now. The main motivation for jumping into now is to work out the kinks in the JSR-299 and JSF 2 implementations. Plus, I'm starting to get the word out about what's going on with Seam 3 so that you can help drive its future and be a part of the process.
</p>

<p class="wikiPara">
If you've read anything I've written about Seam, you know that I am a huge fan of page actions. Not because I disagree with the event-driven style of a component model, but rather because the web is diverse (and likely your intranet as well). Often times, the only way you can get an application to work properly is to sprinkle a page action here in there. PLUS, it's essential for view-level security and the enforcement of other prerequisites.
</p>

<p class="wikiPara">
With that said, I have completed a prototype of page actions in Seam 3. Only now, we are calling them view actions. The reason for the name change is because the JSF EG renamed Red Hat's page parameter contribution to view parameters. So, we are bring page actions inline with the terminology settled on by the EG. We are hopeful view actions will make it into JSF 2.1.
</p>

<p class="wikiPara">
Okay, so why the big announcement? View actions are interesting because they blend two <i class="wikiEmphasis">very</i> cool features in JSF 2. First, the view action is defined in the new metadata facet. This facet is a non-rendered region of the component tree that can host components which describe how the page should be processed. One example of metadata is a view action. The second feature is the <tt>PreRenderViewEvent</tt>, which is really what give view actions life. This event is fired right before the view is rendered. If the view ID is changed by a listener, the event is fired again. But that leaves it up to us to actually weave in the navigation handling.
</p>

<p class="wikiPara">
So instead of using pages.xml, you will now define page actions in your view template (and be able to leverage Facelets templating to share common definitions across pages)
</p>

<pre class="wikiPreformatted">&lt;f:metadata&gt;
   &lt;s:viewAction execute="#{blog.loadEntry}"/&gt;
&lt;/f:metadata&gt;</pre>


<p class="wikiPara">
The view actions work almost identically as they do in Seam 2. If a navigation case is matched, it short-circuits the execution of all subsequent view actions. View actions only execute on an initial request by default. You can have them execute for every request using <tt>onPostback="true"</tt>. You can also supply a condition to control if the action is executed contextually (e.g., <tt>if="#{facesContext.validationFailed}</tt>).
</p>

<p class="wikiPara">
I have also implemented a rough prototype of view-level security:
</p>

<pre class="wikiPreformatted">&lt;s:restrictView required="#{identity.loggedIn}"/&gt;</pre>


<p class="wikiPara">
You may also be interested in how I implemented these two features. I setup a processor chain so:
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> It's easy to add additional behavior before the view is rendered</li>
<li class="wikiOrderedListItem"> So each processor can be implemented as a JSR-299 bean and take advantage of contextual injection</li>
</ol>

<p class="wikiPara">
<a href="http://seamframework.org/Download/SeamDownloads#H-BuildingSeam3" target="" class="regularLink">Check it out</a>. Give us feedback. You can see these components in action in the Seam 3 booking example and permalink examples.</p>
</div>

