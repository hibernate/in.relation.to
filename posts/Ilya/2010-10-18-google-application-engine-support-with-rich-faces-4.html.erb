---
title: "Google Application Engine Support with RichFaces 4"
author: "Ilya Shaikovsky"
blogger_name: "Ilya"
creation_date: "18-10-2010"
original_tags: []
tags: []

relative_url: /2010/10/18/google-application-engine-support-with-rich-faces-4
slug: google-application-engine-support-with-rich-faces-4
lace: http://in.relation.to/17465.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2010/10/18/google-application-engine-support-with-rich-faces-4
---
<div id="documentDisplay" class="documentDisplay">


<div style="float: right; margin-left: 20px; margin-bottom: 20px;">
     <a href="http://labs.jboss.com/richfaces" target="blank"> 
         <img src="http://design.jboss.org/richfaces/logo/final_logo/richfaces_logo_200px.png">
     </a>
</div>
<p class="wikiPara">
Support for cloud deployment of RichFaces based applications was one of the hot topics for a long time and finally it’s there! Actually the development was mostly completed a month ago and was already announced at <a href="http://in.relation.to/17214.lace" target="" class="regularLink">Java One sessions</a>.  The official announcement was postponed in order to stabilize the feature and to create a special archetype to make it an easy start. 
</p>

<p class="wikiPara">
Let’s review what was done and the steps which should be performed to deploy your RichFaces application to Google Application Engine. 
</p>

<h2 class="wikiHeadline2" id="H-RestrictionsOfGAEDeployment"><a href="/2010/10/18/google-application-engine-support-with-rich-faces-4#H-RestrictionsOfGAEDeployment">Restrictions of GAE deployment</a></h2>

<p class="wikiPara">
Google Application Engine deployment introduces some restrictions for the Java developer. Here are some of them which are important for us to get started:
</p>


<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Creation of new threads is not allowed</li>
<li class="wikiUnorderedListItem"> Java2D is prohibited</li>
<li class="wikiUnorderedListItem"> No write access to file system</li>
<li class="wikiUnorderedListItem"> <a href="http://code.google.com/intl/en/appengine/kb/java.html" target="" class="regularLink">Other ones could be checked at GAE knowledgebase</a>
</li>
</ul>

<h2 class="wikiHeadline2" id="H-HowToAvoidJava2DMavenPluginForResourcesGeneration"><a href="/2010/10/18/google-application-engine-support-with-rich-faces-4#H-HowToAvoidJava2DMavenPluginForResourcesGeneration">How to avoid Java2D? Maven plugin for resources generation.</a></h2>

<p class="wikiPara">
One of the most important restrictions which required additional development from our team was the <b>Java2D usage restriction</b>. RichFaces Skinning mechanism relies to these classes for dynamic resources generation to support application skinning. To meet GAE restriction without losing RichFaces look'n’feel flexibility a new Resource Plugin that creates static version of RichFaces resources was needed:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Substitute skin parameters to CSS for all skins used by application</li>
<li class="wikiUnorderedListItem"> Compress CSS files</li>
<li class="wikiUnorderedListItem"> Provides relative URLs in CSS</li>
<li class="wikiUnorderedListItem"> Generates skin images</li>
<li class="wikiUnorderedListItem"> Extracts all JavaScript files used by application and compress them</li>
<li class="wikiUnorderedListItem"> Generates descriptor for all processed files. RichFaces framework use this descriptor to point to appropriate resources (e.g. placed on external server/CDN)</li>
</ul>

<p class="wikiPara">
Check plugin definition and configuration at <a href="http://anonsvn.jboss.org/repos/richfaces/trunk/archetypes/rf-gae-sample/src/main/resources/archetype-resources/pom.xml" target="" class="regularLink">generated application pom.xml</a> (maven-resources-plugin) 
</p>

<p class="wikiPara">
All that is needed after that is to define static resource location in web.xml using context parameter like:
</p>


<pre class="wikiPreformatted">    &lt;context-param&gt;
        &lt;param-name&gt;org.richfaces.staticResourceLocation&lt;/param-name&gt;
        &lt;param-value&gt;#{facesContext.externalContext.requestContextPath}/static-resources/#{resourceLocation}&lt;/param-value&gt;
    &lt;/context-param&gt;</pre>



<p class="wikiPara">
 <b>Note:</b> that this can also be useful for serving resources from different servers to aid in scalability in production environments.
</p>

<h2 class="wikiHeadline2" id="H-WhatShouldBeConsideredAdditionally"><a href="/2010/10/18/google-application-engine-support-with-rich-faces-4#H-WhatShouldBeConsideredAdditionally">What should be considered additionally</a></h2>

<p class="wikiPara">
There are some more points related to GAE restrictions. Some of them are not directly related to RichFaces usage but should be considered by any JSF developer:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Current push component architecture – does not support listener serialization. </li>
</ul>

<p class="wikiPara">
 So we still need to complete push <a href="https://jira.jboss.org/browse/RF-9121" target="" class="regularLink">architectural redesign</a> in order to support cloud environment properly for that component.
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Creation of new threads is not allowed</li>
</ul>

<p class="wikiPara">
 So trying to port some simple examples from 3.3.x directly which relies on threads (e.g. poll/push) – will not works.
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Running JSF 2.0 at GAE requires some additional settings even without RichFaces 4. </li>
</ul>

<p class="wikiPara">
Check that <a href="http://appengine-cookbook.appspot.com/recipe/configuring-javaserver-faces-20-to-run-on-the-google-app-engine-using-eclipse/?id=ahJhcHBlbmdpbmUtY29va2Jvb2tyigELEgtSZWNpcGVJbmRleCI2YWhKaGNIQmxibWRwYm1VdFkyOXZhMkp2YjJ0eUVnc1NDRU5oZEdWbmIzSjVJZ1JLWVhaaERBDAsSBlJlY2lwZSI3YWhKaGNIQmxibWRwYm1VdFkyOXZhMkp2YjJ0eUVnc1NDRU5oZEdWbmIzSjVJZ1JLWVhaaERBOQw" target="" class="regularLink">article from GAE knowledge base</a> for details.
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> No write access to file system</li>
</ul>

<p class="wikiPara">
Developer should configure cache to use <a href="http://code.google.com/appengine/docs/java/memcache/" target="" class="regularLink">Google Memcache implementation</a>.
</p>

<h2 class="wikiHeadline2" id="H-ArchetypeForGAEProjectGenerationAndBuild"><a href="/2010/10/18/google-application-engine-support-with-rich-faces-4#H-ArchetypeForGAEProjectGenerationAndBuild">Archetype for GAE project generation and build</a></h2>

<p class="wikiPara">
As was mentioned above, and at <a href="http://www.slideshare.net/balunasj/rich-faces-inthecloudminibooth" target="" class="regularLink">JavaOne</a> we have created a special archetype in order to create JSF 2.0, RichFaces 4 application skeleton already configured for GAE deployment.  To generate a project – just execute: 
</p>



<pre class="wikiPreformatted">mvn archetype:generate -DarchetypeGroupId=org.richfaces.archetypes 
-DarchetypeArtifactId=richfaces-archetype-gae -DarchetypeVersion=4.0.0.20101004-M3 
-DgroupId=&lt;yourGroupId&gt; -DartifactId=&lt;yourArtifactId&gt; -Dversion=1.0-SNAPSHOT </pre>


<p class="wikiPara">
Now the project could be built using simple <i>mvn install</i> execution
</p>

<b>Notes:</b><p class="wikiPara">
 
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> First released version of the archetype is in 4.0.0.20101004-M3</li>
<li class="wikiOrderedListItem"> The readme.txt file contains instructions for deploying to GAE server, or using the local GAE SDK developer server for local testing.</li>
</ol>

<h2 class="wikiHeadline2" id="H-DeployingApplicationsToGAEAccount"><a href="/2010/10/18/google-application-engine-support-with-rich-faces-4#H-DeployingApplicationsToGAEAccount">Deploying applications to GAE account</a></h2>

<p class="wikiPara">
In order to avoid copy and paste work – <a href="http://code.google.com/intl/en/appengine/docs/java/gettingstarted/uploading.html" target="" class="regularLink">here is the link to official instructions </a> which we successfully using for our tests deployments.
If you already have your account created, application registered and GAE SDK configured properly:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Make sure you updated version in appengine-web.xml before redeploying</li>
<li class="wikiUnorderedListItem"> Execute appcfg update <i>&lt;path to exploded archive with application&gt;</i>
</li>
<li class="wikiUnorderedListItem"> That’s it! Just go to your account and check that the application in place and working!</li>
</ul>

<hr>

<a href="http://twitter.com/ilya_shaikovsky">Get updates of my blogs in twitter</a><p class="wikiPara">
 
</p>

<a href="http://www.jroller.com/a4j/">My jroller.com blog</a>
</div>

