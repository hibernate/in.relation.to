---
title: "RDBMS researchers attack MapReduce"
author: "Jason Greene"
blogger_name: "Jason"
creation_date: "25-01-2008"
original_tags: []
tags: [Hibernate Search]

relative_url: /2008/01/25/rdbms-researchers-attack-map-reduce
slug: rdbms-researchers-attack-map-reduce
lace: http://in.relation.to/3472.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2008/01/25/rdbms-researchers-attack-map-reduce
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
I stumbled upon an interesting post by David J. DeWitt and Michael Stonebraker entitled <q><a href="http://www.databasecolumn.com/2008/01/mapreduce-a-major-step-back.html" target="" class="regularLink">MapReduce: A major step backwards</a></q>.
</p>

<p class="wikiPara">
For those not familiar with MapReduce, it is a programming model developed by Google for distributed computing on extremely large sets of data. You can read Google's original paper outlining the technique <a href="http://labs.google.com/papers/mapreduce.html" target="" class="regularLink">here</a>.
</p>

<p class="wikiPara">
The authors of this post make some excellent points, most of which are centered upon the importance of a well defined structure and abstraction to data. While I certainly agree to a number of them, it's hard to ignore the simplicity and effectiveness of MapReduce. After all, <a href="http://www.niallkennedy.com/blog/2008/01/google-mapreduce-stats.html" target="" class="regularLink">it is currently being used to process 20 petabytes of data a day</a>.</p>
</div>

