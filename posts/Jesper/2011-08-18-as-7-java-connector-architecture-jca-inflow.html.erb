---
title: "AS7: Java Connector Architecture (JCA) inflow"
author: "Jesper Pedersen"
blogger_name: "Jesper"
creation_date: "18-08-2011"
original_tags: []
tags: [JBoss AS]

relative_url: /2011/08/18/as-7-java-connector-architecture-jca-inflow
slug: as-7-java-connector-architecture-jca-inflow
lace: http://in.relation.to/21597.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2011/08/18/as-7-java-connector-architecture-jca-inflow
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
In my <a href="http://in.relation.to/21013.lace" target="" class="regularLink">previous blog</a> I wrote about what the role of the Java Connector Architecture (JCA) container is inside the JBoss Application Server - and especially the IronJacamar container inside JBoss Application Server 7.
</p>

<h2 class="wikiHeadline2" id="H-Inflow"><a href="/2011/08/18/as-7-java-connector-architecture-jca-inflow#H-Inflow">Inflow</a></h2>

<p class="wikiPara">
JBoss Application Server 7.0.1 was released yesterday with EJB3/MDB support - <a href="http://www.jboss.org/jbossas/downloads" target="" class="regularLink">try it out</a> and report back.
</p>

<p class="wikiPara">
In order for this to work we need a couple of pieces, namely the JBoss EJB3 MessageDrivenBean (MDB) container and <a href="http://www.jboss.org/hornetq" target="" class="regularLink">HornetQ</a> which is our messaging system.
</p>

<p class="wikiPara">
However, if the JBoss EJB3 project had to integrate with every messaging system out there it would be a mess. Hence the EJB3 specification was made generic such that all types of systems could be plugged in.
</p>

<p class="wikiPara">
This is where JCA inflow comes into the picture.
</p>

<h2 class="wikiHeadline2" id="H-IronJacamar"><a href="/2011/08/18/as-7-java-connector-architecture-jca-inflow#H-IronJacamar">IronJacamar</a></h2>

<p class="wikiPara">
The IronJacamar container features a completely new inflow system - as compared to previous JBoss Application Server releases - which was designed to decouple the interaction of the requesting container (f.ex. JBoss EJB3/MDB) and the target system (f.ex. HornetQ) even more.
</p>

<p class="wikiPara">
IronJacamar keeps track of all resource adapter deployments which has support for inflow functionality - like the HornetQ resource adapter. This information can be queried to give a list of say all resource adapters that support the <q>javax.jms.MessageListener</q> interface. The returned list can then be filtered based on the user input and default settings such that correct instance is found. IronJacamar will even provide a list of all supported configuration properties and their type of the target system.
</p>

<p class="wikiPara">
The requesting container can then activate a configuration using generic data types, so no explicit dependencies are needed on the target system's classes.
</p>

<p class="wikiPara">
And by <q>magic</q> the two systems are now connected, and ready to serve you messages to your message-driven beans :)
</p>

<h2 class="wikiHeadline2" id="H-FurtherReading"><a href="/2011/08/18/as-7-java-connector-architecture-jca-inflow#H-FurtherReading">Further reading</a></h2>

<p class="wikiPara">
You can get an overview of how inflow works on a resource adapter level in our <a href="http://docs.jboss.org/ironjacamar/userguide/1.0/en-US/html/introduction.html#overview_inbound" target="" class="regularLink">user guide</a>, and of course in the <a href="http://jcp.org/en/jsr/detail?id=322" target="" class="regularLink">Java Connector Architecture specification</a> itself.
</p>

<p class="wikiPara">
If you combine the power of JCA inflow with the ease of IronJacamar you end up with a very flexible solution for getting your data into JBoss Application Server 7.
</p>

<p class="wikiPara">
For Those About to Rock, We Salute You !
</p>

<p class="wikiPara">
[<a href="http://www.jboss.org/jbossas" target="" class="regularLink">JBoss AS7</a>] [<a href="http://www.jboss.org/ironjacamar" target="" class="regularLink">IronJacamar</a>]
</p>
</div>

