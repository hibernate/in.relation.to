---
title: "IronJacamar 1.1.0.Alpha6 is out"
author: "Jesper Pedersen"
blogger_name: "Jesper"
creation_date: "29-02-2012"
original_tags: []
tags: []

relative_url: /2012/02/29/iron-jacamar-110-alpha-6-is-out
slug: iron-jacamar-110-alpha-6-is-out
lace: http://in.relation.to/22970.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2012/02/29/iron-jacamar-110-alpha-6-is-out
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
I'm happy to announce the 6th alpha release of our IronJacamar 1.1 series.
</p>

<p class="wikiPara">
Full release notes are <a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310691&amp;version=12318968" target="" class="regularLink">here</a>.
</p>

<h2 class="wikiHeadline2" id="H-LazyConnectionManager"><a href="/2012/02/29/iron-jacamar-110-alpha-6-is-out#H-LazyConnectionManager">Lazy connection manager</a></h2>

<p class="wikiPara">
This release marks one of the first new major features of the IronJacamar 1.1 series over the stable release used in <a href="http://www.jboss.org/jbossas" target="" class="regularLink">JBoss Application Server 7.1</a> namely the first commit of our lazy connection manager.
</p>

<p class="wikiPara">
So what is a lazy connection manager and why should you care ?
</p>

<p class="wikiPara">
The lazy connection manager is an optional part of the Java EE Connector Architecture 1.6 specification and is divided into two parts
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> <a href="http://docs.oracle.com/javaee/6/api/javax/resource/spi/LazyAssociatableConnectionManager.html" target="" class="regularLink">LazyAssociatableConnectionManager</a>
</li>
<li class="wikiUnorderedListItem"> <a href="http://docs.oracle.com/javaee/6/api/javax/resource/spi/LazyEnlistableConnectionManager.html" target="" class="regularLink">LazyEnlistableConnectionManager</a>
</li>
</ul>

<p class="wikiPara">
Our first commit is in the <q>associatable</q> part, which will allow the JCA container to reassign physical connections to other logical connection handles.
</p>

<p class="wikiPara">
Eh, what ? You may say... Ok, lets say you have an application which uses connections to an Enterprise Information System (EIS):
</p>

<pre class="wikiPreformatted">
Connection c1 = myEIS.getConnection();

// Do work with c1

Connection c2 = myEIS.getConnection();

// Do work with c2

c1.close();
c2.close();
</pre>


<p class="wikiPara">
But what happens if there is only one physical connection to the EIS available ? The <q>c2</q> will get a timeout on the creation call, since all connections are controlled by the JCA container.
</p>

<p class="wikiPara">
This is where the <q>associatable</q> part comes into the picture; IronJacamar will detect that the application is asking for another connection, but there aren't any available in the pool. IronJacamar will then ask the EIS resource adapter to dissociate the physical connection for <q>c1</q> and attach it to <q>c2</q>. Whenever either <q>c1</q> or <q>c2</q> is used it is up to the resource adapter to make sure that the physical connection handle is valid against the logical one.
</p>

<p class="wikiPara">
This basically allows you to multiplex connection handles on fewer physical connections; say 1000 to 100, and thereby saving system resources in the EIS layer.
</p>

<p class="wikiPara">
Just to give you an idea of how a resource adapter could look we have added a <q>HelloWorld/Lazy</q> example to our documentation.
</p>

<p class="wikiPara">
And you can disable the functionality - if your resource adapter supports it - by setting the <q>sharable</q> attribute to false.
</p>

<p class="wikiPara">
A note to the hard-core group of the JCA community; we have extended the specification API with the following methods:
</p>

<pre class="wikiPreformatted">
   /**
    * Associate a managed connection to a logical connection
    *
    * @param connection The connection
    * @param mcf The managed connection factory
    * @param cri The connection request information
    * @return The managed connection
    * @exception ResourceException Thrown if an error occurs
    */
   public ManagedConnection associateManagedConnection(Object connection, ManagedConnectionFactory mcf,
                                                       ConnectionRequestInfo cri)
      throws ResourceException;

   /**
    * Dissociate a managed connection from a logical connection. The return value
    * of this method will indicate if the managed connection has more connections
    * attached (false), or if it was return to the pool (true).
    *
    * If the managed connection is return to the pool its &lt;code&gt;cleanup&lt;/code&gt; method
    * will be called
    *
    * @param connection The connection
    * @param mc The managed connection
    * @param mcf The managed connection factory
    * @return True if the managed connection was freed; otherwise false
    * @exception ResourceException Thrown if an error occurs
    */
   public boolean dissociateManagedConnection(Object connection, ManagedConnection mc, ManagedConnectionFactory mcf)
      throws ResourceException;
</pre>


<p class="wikiPara">
The first method will help you, if you doesn't have an easy link between the connection and the managed connection; the <q>associateConnection</q> callback will still happen - keep that in mind.
</p>

<p class="wikiPara">
The second method will allow you to dissociate the managed connection when you know you aren't going to use it for a while. Thereby making it easier for the JCA container to hand it out to other callers. This use-case isn't part of the existing JCA specification. Yummi stuff.
</p>

<p class="wikiPara">
This is only the first step, but we are on our way now :)
</p>

<h2 class="wikiHeadline2" id="H-OtherChanges"><a href="/2012/02/29/iron-jacamar-110-alpha-6-is-out#H-OtherChanges">Other changes</a></h2>

<p class="wikiPara">
The other changes in this release are mostly around fixing bugs found during our testing with JBoss Application Server and our upcoming JBoss Enterprise Application Platform release.
</p>

<p class="wikiPara">
There is a nice update to our code generator though, which should give you a better starting point for your development.
</p>

<h2 class="wikiHeadline2" id="H-TheRoadAhead"><a href="/2012/02/29/iron-jacamar-110-alpha-6-is-out#H-TheRoadAhead">The Road Ahead</a></h2>

<p class="wikiPara">
Testing continues, and we have more cool stuff in the pipeline, so be sure to check back, or give us a shout in our forums.
</p>

<p class="wikiPara">
For Those About to Rock, We Salute You !
</p>

<p class="wikiPara">
[<a href="http://www.jboss.org/ironjacamar" target="" class="regularLink">WebSite</a>] [<a href="http://www.jboss.org/ironjacamar/downloads.html" target="" class="regularLink">Download</a>] [<a href="http://docs.jboss.org/ironjacamar/userguide/1.1/en-US/html/" target="" class="regularLink">Documentation</a>] [<a href="https://issues.jboss.org/browse/JBJCA" target="" class="regularLink">JIRA</a>] [<a href="https://community.jboss.org/en/ironjacamar/?view=discussions" target="" class="regularLink">Forum</a>] </p>
</div>

