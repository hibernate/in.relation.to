---
title: "RichFaces 3.1 released!"
author: "Gavin King"
blogger_name: "Gavin"
creation_date: "14-09-2007"
original_tags: []
tags: []

relative_url: /2007/09/14/rich-faces-31-released
slug: rich-faces-31-released
lace: http://in.relation.to/2324.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2007/09/14/rich-faces-31-released
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
The <a href="http://labs.jboss.com/jbossrichfaces/" target="" class="regularLink">RichFaces</a> team has released RichFaces 3.1.0. This release merges the functionality of Ajax4JSF and RichFaces into a single package and adds a number of new components. You can get the new release <a href="http://labs.jboss.com/jbossrichfaces/downloads" target="" class="regularLink">here</a> or try out the <a href="http://livedemo.exadel.com/richfaces-demo/" target="" class="regularLink">online demo</a>.
</p>

<p class="wikiPara">
Previously, Ajax4JSF and RichFaces were distributed seperately since Ajax4JSF was open source and RichFaces was a commercial product sold by Exadel (and layered on top of the Ajax4JSF engine). Since the RichFaces project was open sourced at <a href="http://jboss.org" target="" class="regularLink">JBoss</a>, this split distribution was no longer meaningful. We've now completely merged the projects and packaging.
</p>

<p class="wikiPara">
Major new features of this release include:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> <a href="http://livedemo.exadel.com/richfaces-demo/richfaces/toolTip.jsf?c=toolTip" target="" class="regularLink">tool tip</a> support (balloon help)</li>
<li class="wikiUnorderedListItem"> an excellent <a href="http://livedemo.exadel.com/richfaces-demo/richfaces/calendar.jsf?c=calendar" target="" class="regularLink">calendar control</a> for date selection</li>
<li class="wikiUnorderedListItem"> much improved <a href="http://livedemo.exadel.com/richfaces-demo/richfaces/tree.jsf?c=tree" target="" class="regularLink">tree control</a> with <a href="http://livedemo.exadel.com/richfaces-demo/richfaces/treeNodesAdaptor.jsf?c=recursiveTreeNodesAdaptor" target="" class="regularLink">tag-oriented databinding</a>
</li>
<li class="wikiUnorderedListItem"> a <a href="http://livedemo.exadel.com/richfaces-demo/richfaces/scrollableDataTable.jsf?c=scrollableDataTable" target="" class="regularLink">scrollable datatable</a> with support for very large datasets</li>
<li class="wikiUnorderedListItem"> <a href="http://livedemo.exadel.com/richfaces-demo/richfaces/effect.jsf?c=effect" target="" class="regularLink">support</a> for <a href="http://script.aculo.us/" target="" class="regularLink">script.aculo.us</a> effects</li>
<li class="wikiUnorderedListItem"> a <a href="http://livedemo.exadel.com/richfaces-demo/richfaces/dataGrid.jsf?c=dataGrid" target="" class="regularLink">data grid</a> and <a href="http://livedemo.exadel.com/richfaces-demo/richfaces/dataLists.jsf?c=dataList" target="" class="regularLink">data list</a>
</li>
</ul>

<p class="wikiPara">
Tool tips may be easily attached to any JSF control, for example:
</p>

<pre class="wikiPreformatted">&lt;rich:toolBar&gt;
    &lt;rich:dropDownMenu value="File"&gt;
        &lt;rich:menuItem value="Open..."&gt;
            &lt;rich:toolTip&gt;Open a file from the disk...&lt;/rich:toolTip&gt;
        &lt;/rich:menuItem&gt;
        &lt;rich:menuItem value="Save"&gt;
            &lt;rich:toolTip&gt;Save the file to the disk&lt;/rich:toolTip&gt;
        &lt;/rich:menuItem&gt;
        &lt;rich:menuItem value="Save As..."&gt;
            &lt;rich:toolTip&gt;Save the file to the disk with a new filename&lt;/rich:toolTip&gt;
        &lt;/rich:menuItem&gt;
    &lt;/rich:dropDownMenu&gt;
    &lt;rich:dropDownMenu value="View"&gt;
        ...
    &lt;/rich:dropDownMenu&gt;
&lt;/rich:toolBar&gt;</pre>


<p class="wikiPara">
My favorite new feature is building trees without the need for Java-based databinding code (ie. no <tt>TreeModel</tt> or equivalent). Instead, databinding may be done completely in the user interface. For example, if I have a hierachical directory structure, and each directory contains files, I could build my tree of directories and files as follows:
</p>

<pre class="wikiPreformatted">&lt;rich:tree switchType="ajax"&gt;
    &lt;rich:recursiveTreeNodesAdaptor roots="#{root}" nodes="#{dir.children}" var="dir"&gt;
        &lt;rich:treeNode&gt;#{dir.name}/&lt;/rich:treeNode&gt;
        &lt;rich:treeNodesAdaptor nodes="#{dir.files}" var="file"&gt;
            &lt;rich:treeNode&gt;#{file.name}&lt;/rich:treeNode&gt;
        &lt;/rich:treeNodesAdaptor&gt;
    &lt;/rich:recursiveTreeNodesAdaptor&gt;
&lt;/rich:tree&gt;</pre>


<p class="wikiPara">
We use <tt>&lt;rich:recursiveTreeNodesAdaptor&gt;</tt> for the directory tree because each directory contains other directories recursively. For files, we use <tt>&lt;rich:treeNodesAdaptor&gt;</tt>, since the list of files is just one level deep in each directory. (Please compare this code to the code you would have to write in Swing or other frameworks with a Java-based approach to databinding!)
</p>

<p class="wikiPara">
Congratulations to the whole RichFaces team!</p>
</div>

