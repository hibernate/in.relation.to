---
title: "Conspiracy theorists"
author: "Gavin King"
blogger_name: "Gavin"
creation_date: "29-05-2009"
original_tags: [JDO,JPA]
tags: [JPA]

relative_url: /2009/05/29/conspiracy-theorists
slug: conspiracy-theorists
lace: http://in.relation.to/11603.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2009/05/29/conspiracy-theorists
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
Haha, just stumbled across <a href="http://www.datanucleus.org/products/accessplatform/jdo_jpa_faq.html" target="" class="regularLink">this</a>. It's funny to see, a whole three years after the <a href="http://jcp.org/en/jsr/results?id=3768" target="" class="regularLink">end of the Persistence Wars</a>, and in the face of the incredible success of JPA in almost every corner of Java development, that the conspiracy theorists are still out there, darkly hinting that <q>commercial organisations like Oracle, IBM, RedHat ... have their own vested interest in RDBMS technologies, or in selling application servers</q>.
</p>

<p class="wikiPara">
As if the old JDO vendors weren't <q>commercial organizations</q>, or weren't selling their own technologies in which they had a <q>vested interest</q>.
</p>

<p class="wikiPara">
Well, look here, JPA won. Get over it. It won because it was a better-written specification, with a better feature set. It was written by serious people with an understanding of the marketplace, not by scary Unabomber types with beards. It had a simpler set of APIs and a simpler lifecycle model. It revolutionized O/R mapping by introducing the first annotation-based mapping layer. It was truly integrated with the EE5 environment. It had better support for detached objects, and a more flexible model for handling graphs of persistent objects. It concentrated on defining user-visible semantics, not implementation. But, just as importantly, it <i class="wikiEmphasis">left out</i> all kinds of useless junk that JDO threw in. The measure of a good spec is not only what it puts in, but also what it leaves out, and what it leaves for tomorrow. 
</p>

<p class="wikiPara">
It doesn't help to screech that your spec has a <i class="wikiEmphasis">bigger</i> feature set, not unless you can prove that those features are useful, and well-designed.
</p>

<p class="wikiPara">
Now that JPA2 is introducing great new things like a <a href="http://blogs.sun.com/ldemichiel/entry/java_persistence_2_0_proposed" target="" class="regularLink">truly typesafe query API</a> (instead of the totally half-assed <q>fetch profiles</q> stuff in JDO2) and a runtime-accessible metamodel, can't we all just agree that things turned out pretty well, in the end?</p>
</div>

