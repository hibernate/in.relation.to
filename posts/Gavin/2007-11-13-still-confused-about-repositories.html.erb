---
title: "Still confused about repositories"
author: "Gavin King"
blogger_name: "Gavin"
creation_date: "13-11-2007"
original_tags: []
tags: []

relative_url: /2007/11/13/still-confused-about-repositories
slug: still-confused-about-repositories
lace: http://in.relation.to/2874.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2007/11/13/still-confused-about-repositories
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
So, I've been following <a href="/Bloggers/RepositoryPatternVsTransparentPersistence" target="" class="regularLink">this discussion</a> with interest. I'm still confused. All I'm really getting out of the comments on this thread is: <q>there's some other objects in the system that aren't DAOs or entities</q>. But I knew that already. Clearly, I need to actually read the damn book for myself. Still, it really doesn't fill me with confidence that people who /have/ read the book don't seem to be able to explain (in words or code) the Repository notion coherently. And it looks like everyone has their own private take on what exactly a Repository is all about. This gives me a hint that the idea is not especially well-defined. 
</p>

<p class="wikiPara">
What I still need to hear from proponents of this idea is a clear accounting of:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> what problem does it solve?</li>
<li class="wikiUnorderedListItem"> how do I tell when I need to use it?</li>
<li class="wikiUnorderedListItem"> how do I tell which functionality belongs in the Repository, which on the Entity, and which on the DAO?</li>
<li class="wikiUnorderedListItem"> what are the costs of using it?</li>
</ul>

<p class="wikiPara">
And I want these folks to take seriously the following question:
</p>

<blockquote class="wikiBlockquote">
Do we /really/ need another stupid layer in our already horribly over-engineered Java applications?
</blockquote>

<p class="wikiPara">
Enough layers already, goddammit! :-)
</p>

<p class="wikiPara">
UPDATE: Fabio Kung has written a nice 
<a href="http://www.fabiokung.com/2007/11/12/comments-to-gavin-king-about-ddd-and-repositories/" target="" class="regularLink">explanation</a>
of his understanding of the semantics of a repository, and there's nothing there 
that I really object to. Except that, what he's describing is pretty much what 
my understanding of the DAO pattern has /always/ been. I have never understood 
that  a <q>DAO</q> was persistence specific from the point of view of the client. It's just  a source of objects. Where it gets those object from is its own 
business. I sorta thought that was the whole point...</p>
</div>

