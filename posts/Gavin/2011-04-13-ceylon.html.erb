---
title: "Ceylon"
author: "Gavin King"
blogger_name: "Gavin"
creation_date: "13-04-2011"
original_tags: [Ceylon]
tags: [Ceylon]

relative_url: /2011/04/13/ceylon
slug: ceylon
lace: http://in.relation.to/19161.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2011/04/13/ceylon
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
So <a href="http://blog.talawah.net/2011/04/gavin-king-unviels-red-hats-top-secret.html" target="" class="regularLink">Marc Richards</a> and then <a href="http://developers.slashdot.org/story/11/04/13/0136229/Red-Hat-Uncloaks-Java-Killer-the-Ceylon-Project" target="" class="regularLink">slashdot</a> picked up on my presentations at InfoQ China. I wasn't quite expecting this level of exposure at this point, and I imagine that things will quiet down pretty quickly at least until we do an initial release of the compiler. All we have right now is a specification, an ANTLR grammar, and an incomplete type checker. Work on the backend bytecode generation is just beginning (though we'll be able to reuse a bunch of code from <tt>javac</tt>).
</p>

<p class="wikiPara">
Nevertheless, I should make a few comments. First, I never billed this as a <q>Java Killer</q> or <q>the next generation of the Java language</q>. Not my words. Ceylon isn't Java, it's a new language that's deeply influenced by Java, designed by people who are unapologetic fans of Java. Java's not dying anytime soon, so nothing's killing it.
</p>

<p class="wikiPara">
So why a new language? Well, we've been designing and building frameworks and libraries for Java for ten years, and we know its limitations intimately. And we're frustrated. I'm not going to recap all the frustrations here. (I've listed some of them in the first presentation.) But I guess I should mention that the number one technical problem that we simply can't solve to our satisfaction in Java - or in any other existing JVM language - is the problem of defining user interfaces and structured data using a typesafe, hierarchical syntax. Without a solution to this problem, Java remains joined at the hip to XML.
</p>

<p class="wikiPara">
But much of our frustration is not even with the Java language itself. The extremely outdated class libraries that form the Java SE SDK are riddled with problems. Developing a great SDK is a top priority of the project.
</p>

<p class="wikiPara">
On Slashdot, several commenters argue that creating a whole language and SDK from scratch is an enormous undertaking. Well, we're really not starting from scratch: we can reuse an enormous amount of code that is already available under open source licenses in the Java ecosystem. Just think of what's reusable from Open JDK, JBoss, and Eclipse! It's not a requirement that the entire SDK, compiler, and IDE be implemented in Ceylon. And it's not an enormous undertaking for a company of Red Hat's size. And, of course, we don't want to do this on our own. A project like this isn't even interesting unless it's a community effort.
</p>

<p class="wikiPara">
Here's the presentations that caused this fuss:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> A brief overview of the project: <a href="#ceylon_attachment1" target="" class="regularLink">Introducing Project Ceylon[1]</a>
</li>
<li class="wikiUnorderedListItem"> A discussion of some features of the type system: <a href="#ceylon_attachment2" target="" class="regularLink">The Ceylon Type System[2]</a>
</li>
</ul>

<p class="wikiPara">
UPDATE: If you're interested in knowing more about the language, please check out the tutorial <a href="/Tutorials/IntroductionToCeylon" target="" class="regularLink">Introduction to Ceylon</a>.</p>
</div>

<div class="attachments">
<h4>Attachments</h4>
<ol class="wikiOrderedList"><li class="wikiOrderedListItem"><a name="ceylon_attachment1" href="/assets/Introducing Project Ceylon.pdf">Introducing Project Ceylon.pdf</a></li>
<li class="wikiOrderedListItem"><a name="ceylon_attachment2" href="/assets/The Ceylon Language.pdf">The Ceylon Language.pdf</a></li>
</ol>
</div>

