---
title: "Why don't CDI beans have names by default?"
author: "Gavin King"
blogger_name: "Gavin"
creation_date: "17-01-2011"
original_tags: [Contexts and Dependency Injection,JavaServer Faces,Seam News]
tags: [CDI,JSF,Seam]

relative_url: /2011/01/17/why-dont-cdi-beans-have-names-by-default
slug: why-dont-cdi-beans-have-names-by-default
lace: http://in.relation.to/18130.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2011/01/17/why-dont-cdi-beans-have-names-by-default
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
Some people have wondered why <a href="http://jcp.org/aboutJava/communityprocess/final/jsr299/index.html" target="" class="regularLink">CDI</a> requires an explicit <tt>@Named</tt> annotation before a bean can be accessed using EL? Why not just give all <a href="http://download.oracle.com/javaee/6/api/javax/enterprise/inject/package-summary.html" target="" class="regularLink">beans</a> names by default?
</p>

<p class="wikiPara">
Well, the reason is that EL has a single flat namespace. There's no notion of qualified names in EL. Experience in the JSF community is that avoiding duplicate names is harder than it looks, especially when the application includes multiple modules maintained by different teams. Remember that not all CDI beans are intended to form part of the user interface layer. A Java EE 6 application might include modules defining an independent business layer, whose beans should always be accessed via typesafe dependency injection instead of non-typesafe EL names. Beans in these modules should <i class="wikiEmphasis">not</i> have EL names, in order to avoid polluting the namespace of the UI layer.
</p>

<p class="wikiPara">
Still, the combination <tt>@Named @RequestScoped</tt> is going to be super-common in JSF applications. So CDI includes a built-in <a href="http://download.oracle.com/javaee/6/api/javax/enterprise/inject/Stereotype.html" target="" class="regularLink">stereotype</a> that encapsulates these defaults. The <a href="http://download.oracle.com/javaee/6/api/javax/enterprise/inject/Model.html" target="" class="regularLink">@Model</a> stereotype refers to the <q>M</q> role in the MVC pattern. We recommend that all JSF user-interface-oriented beans be annotated <tt>@Model</tt> to both save a little typing (one annotation instead of two), and, more importantly, to make clear their architectural role in the system. 
</p>

<p class="wikiPara">
Indeed, even when you have a UI model bean that's not <tt>@RequestScoped</tt>, I recommend annotating it <tt>@ConversationScoped @Model</tt> rather than <tt>@Named @ConversationScoped</tt>. The two options have the same functional effect, but the first combination communicates more information to someone reading your code later, and makes it easy to quickly search for all UI model beans.
</p>

<p class="wikiPara">
(Of course, if, for whatever reason, you don't like <tt>@Model</tt>, you can always define your own stereotype to fulfil a similar purpose. The CDI container doesn't treat <tt>@Model</tt> in any special way.)</p>
</div>

