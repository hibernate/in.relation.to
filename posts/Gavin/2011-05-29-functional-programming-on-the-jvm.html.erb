---
title: "Functional programming on the JVM"
author: "Gavin King"
blogger_name: "Gavin"
creation_date: "29-05-2011"
original_tags: []
tags: []

relative_url: /2011/05/29/functional-programming-on-the-jvm
slug: functional-programming-on-the-jvm
lace: http://in.relation.to/20537.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2011/05/29/functional-programming-on-the-jvm
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
Folks, all the blogs crowing about the incredible wonders of <i class="wikiEmphasis">ohmigod functional programming!!!!</i> — by which you mean using higher-order functions like <tt>map()</tt> and <tt>filter()</tt> in some language with ubiquitous side effects — are getting pretty tired. Back in the 80's, Smalltalk guys used to call that <i class="wikiEmphasis">object-oriented programming</i>. It's a stupid accident of history that Java doesn't have higher-order functions, and so putting them back in where they should have been all along isn't really some great paradigm shift. Now, there <i class="wikiEmphasis">is</i> a lot that the Java family of languages is in the process of learning from the really interesting work on type systems done in the academic community around languages like ML and Haskell, but higher-order functions are somehow the <i class="wikiEmphasis">least</i> interesting thing there.
</p>

<p class="wikiPara">
My take: if you're really serious about functional programming being The Future Of Computing, write a Standard ML compiler for the JVM. ML has a powerful static type system and a clean syntax, is very well-thought-out and extremely well-specified, and is even quite readable, at least as far as functional languages go. And it's not a mishmash of itself with some other language ;-) Hell, if you get a compiler running, I promise to look seriously into the possibility of supporting ML as an alternative language for the new platform we're building for Ceylon.
</p>

<p class="wikiPara">
Well, it was just a suggestion...
</p>

<p class="wikiPara">
P.S. Yeah, I would have said Haskell, but I'm guessing that implementing non-strict evaluation on the JVM would be tough. And I don't think we would survive, sanity intact, the inevitable flood of <i class="wikiEmphasis">ohmigod MONADS!!!!!</i> blogs ;-)</p>
</div>

