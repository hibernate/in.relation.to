---
title: "Derby controversy"
author: "Gavin King"
blogger_name: "Gavin"
creation_date: "21-06-2006"
original_tags: []
tags: []

relative_url: /2006/06/21/derby-controversy
slug: derby-controversy
lace: http://in.relation.to/1929.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2006/06/21/derby-controversy
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
Usually I don't like to climb into these kind of discussions - I usually  keep quiet unless I have something more to add than <q>metoo</q>. But forgive me for mentioning that, on balance, I agree with the many people arguing that bundling Derby in the JDK is a Bad Idea. My concern is that this decision naturally forces projects like Hibernate to have to support Derby, no matter what our better judgement as to the maturity/stability of the product at this stage. Perhaps if/when Derby has shown itself to be a truly production-ready platform, this decision could be better justified. But for now, Derby is neither usable in production, nor is it really a good choice for development (HSQL is much more usable at development time, and that is what 95% of people are using).
</p>

<p class="wikiPara">
It would be really nice if Sun would reconsider this decision. Perhaps the solution is simply to offer two different download bundles, one with Derby, one without, and Let The People Decide :-)
</p>

<p class="wikiPara">
UPDATE: I'm also amazed that Sun would want to risk sticking the word <q>Java</q> on this product. Like the <q>Java Desktop</q>, it seriously risks devaluing the brand.
</p>
</div>

