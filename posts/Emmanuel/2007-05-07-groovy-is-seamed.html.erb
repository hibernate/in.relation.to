---
title: "Groovy is Seamed"
author: "Emmanuel Bernard"
blogger_name: "Emmanuel"
creation_date: "07-05-2007"
original_tags: []
tags: [Seam]

relative_url: /2007/05/07/groovy-is-seamed
slug: groovy-is-seamed
lace: http://in.relation.to/2234.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2007/05/07/groovy-is-seamed
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
With the new Groovy 1.1 beta out and its support for Java 5 annotations, wouldn't it be great to be able to write Seam applications in Groovy?
Indeed it is great and you can do that with JBoss Seam (in CVS HEAD at the time of writing).
</p>

<h2 class="wikiHeadline2" id="H-WhatIsSupportedHowDoesItWork"><a href="/2007/05/07/groovy-is-seamed#H-WhatIsSupportedHowDoesItWork">What is supported, how does it work?</a></h2>
<p class="wikiPara">
You can write any entity and any action in Groovy. By simply annotating your Groovy classes with Seam annotations, they become Seam components.
</p>

<pre class="wikiPreformatted">
@Scope(ScopeType.SESSION)
@Name("bookingList")
class BookingListAction implements Serializable
{
    @In EntityManager em
    @In User user
    @DataModel List&lt;Booking&gt; bookings
    @DataModelSelection Booking booking
    @Logger Log log

    @Factory public void getBookings()
    {
        bookings = em.createQuery('''
                select b from Booking b
                where b.user.username = :username
                order by b.checkinDate''')
            .setParameter("username", user.username)
            .getResultList()
    }
    
    public void cancel()
    {
        log.info("Cancel booking: #{bookingList.booking.id} for #{user.username}")
        Booking cancelled = em.find(Booking.class, booking.id)
        if (cancelled != null) em.remove( cancelled )
        getBookings()
        FacesMessages.instance().add("Booking cancelled for confirmation number #{bookingList.booking.id}", new Object[0])
    }
}
</pre>


<p class="wikiPara">
En passant, you can use Groovy to write your Entities, Hibernate support them out of the box. No constraint, no limitation, no XML ;-)
</p>

<pre class="wikiPreformatted">
@Entity
@Name("hotel")
class Hotel implements Serializable
{
    @Id @GeneratedValue
    Long id

    @Length(max=50) @NotNull
    String name

    @Length(max=100) @NotNull
    String address

    @Length(max=40) @NotNull
    String city

    @Length(min=2, max=10) @NotNull
    String state

    @Length(min=4, max=6) @NotNull
    String zip

    @Length(min=2, max=40) @NotNull
    String country

    @Column(precision=6, scale=2)
    BigDecimal price

    @Override
    String toString()
    {
        return "Hotel(${name},${address},${city},${zip})"
    }
}
</pre>


<p class="wikiPara">
Groovy files are compiled by the groovyc compiler in your build system ; they then appear like regular classes to the container.
</p>

<h2 class="wikiHeadline2" id="H-PushItEvenGroovier"><a href="/2007/05/07/groovy-is-seamed#H-PushItEvenGroovier">Push it even Groovier</a></h2>

<p class="wikiPara">
Let's go further, when Seam is in development mode, the .groovy files can be deployed <q>as is</q> with no groovyc build time compilation involved. Like hot redeployable Java Seam components, deploy (and I mean copy) your .groovy files in your WEB-INF/dev directory.
</p>

<p class="wikiPara">
No need to restart the application (not even speaking of the container): the next hit will reload the Groovy classes transparently providing a pretty smooth development environment. Fast development time, fast deployment time.
</p>

<p class="wikiPara">
This mode is currently limited to Seam JavaBean components: EJB 3.0 Session Beans and Entities do not (yet) support hot redeployment. We are considering enhancing the JBoss EJB 3 container to get rid of this limitation (you will still hit this limitation in other containers though).
</p>

<h2 class="wikiHeadline2" id="H-HowCanISetThatUp"><a href="/2007/05/07/groovy-is-seamed#H-HowCanISetThatUp">How can I set that up?</a></h2>

<p class="wikiPara">
By using seam-gen, you can generate a ready to use development environment supporting Groovy in a minute.
</p>

<pre class="wikiPreformatted">
./seam setup
# use project type WAR, the rest is at your will

./seam new-project
# that's it
</pre>


<p class="wikiPara">
And you are done, feel free to write .groovy code in either <tt>src/model</tt> or <tt>src/action</tt>
Remember in Seam development mode, you don't have to restart the application when you change code in <tt>src/action</tt> (whether it be Groovy or Java). A simple <tt>./seam explode</tt> (to copy the Groovy files) will do the trick.
</p>

<p class="wikiPara">
For a complete working Groovy project, have a look at the groovybooking project in JBoss Seam examples (CVS HEAD at the time of writing).
</p>

<p class="wikiPara">
This feature (already available in CVS HEAD) is expected for the next major JBoss Seam release: we still have some more surprises in our bag :-)
</p>

<p class="wikiPara">
NB: if you are interested in Groovy and are in San Francisco tonight, don't miss the <a href="http://glaforge.free.fr/weblog/index.php?itemid=213" target="" class="regularLink">G2One </a>, I will be there if you have any question.
</p>
</div>

