---
title: "Never been that close to Java Persistence compliance"
author: "Emmanuel Bernard"
blogger_name: "Emmanuel"
creation_date: "27-04-2006"
original_tags: []
tags: [Java EE]

relative_url: /2006/04/27/never-been-that-close-to-java-persistence-compliance
slug: never-been-that-close-to-java-persistence-compliance
lace: http://in.relation.to/2171.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2006/04/27/never-been-that-close-to-java-persistence-compliance
---
<div id="documentDisplay" class="documentDisplay">


<h2 class="wikiHeadline2" id="H-EJB3XMLMappingFiles"><a href="/2006/04/27/never-been-that-close-to-java-persistence-compliance#H-EJB3XMLMappingFiles">EJB3 XML mapping files</a></h2>
<p class="wikiPara">
The latest release of <a href="http://entitymanager.hibernate.org" target="" class="regularLink">Hibernate EntityManager </a> (3.1.0 beta8) now support EJB3 XML mapping files (aka deployment descriptors). While annotations are considered a huge step forward for development ease-of-use and productivity, some folks out there stayed concerned about the ability to split metadata from the code. This is now supported in <a href="http://annotations.hibernate.org" target="" class="regularLink">Hibernate Annotations </a> (3.1.0 beta 10) and Hibernate EntityManager in a standard manner.
You can partially overrides java annotations or you can write all you metadata through XML. The easiest solution is to add META-INF/orm.xml in your ejb-jar or persistence jar. This file is automatically taken into account by the persistence provider. Alternatively you can add a <tt>&lt;mapping-file/&gt;</tt> element to your persistence.xml file. Here is a sample for EJB3 XML file
</p>

<pre class="wikiPreformatted">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;entity-mappings xmlns="[=&gt;http://java.sun.com/xml/ns/persistence/orm]"
               [=&gt;xmlns:xsi=]"=&gt;http://www.w3.org/2001/XMLSchema-instance"
               [=&gt;xsi:schemaLocation=]"=&gt;http://java.sun.com/xml/ns/persistence/orm orm_1_0.xsd"
               version="1.0"&gt;
  &lt;package&gt;org.hibernate.test&lt;/package&gt;
  &lt;entity class="Car" metadata-complete="true" access="PROPERTY"&gt;
      &lt;table name="CARS"/&gt;
      &lt;named-query name="carsByManufacturer"&gt;
          &lt;query&gt;select c from Car c where c.manufacturer = :manufacturer&lt;/query&gt;
          &lt;hint name="org.hibernate.timeout" value="200"/&gt;
      &lt;/named-query&gt;
      &lt;attributes&gt;
          &lt;id name="id"&gt;
              &lt;generated-value strategy="AUTO"/&gt;
              &lt;column name="car_id"/&gt;
          &lt;/id&gt;
          &lt;basic name="category" optional="false"&gt;
              &lt;enumerated&gt;STRING&lt;/enumerated&gt;
          &lt;/basic&gt;
          &lt;many-to-one name="manufacturer"&gt;
              &lt;join-column name="manufacturer_fk"/&gt;
          &lt;/one-to-many&gt;
      &lt;/attributes&gt;
  &lt;/entity&gt;
&lt;/entity-mappings&gt;
</pre>


<h2 class="wikiHeadline2" id="H-GlassfishIntegration"><a href="/2006/04/27/never-been-that-close-to-java-persistence-compliance#H-GlassfishIntegration">Glassfish integration</a></h2>

<p class="wikiPara">
I have been working with the Glassfish team for some times now to make sure Hibernate EntityManager integrates well with Glassfish. Now that the specification has been frozen, the integration is working very smoothly:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> download <a href="https://glassfish.dev.java.net/" target="" class="regularLink">Glassfish </a> b43 and above</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> download <a href="http://sourceforge.net/project/showfiles.php?group_id=40712&amp;package_id=156160" target="" class="regularLink">Hibernate EntityManager </a>
</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> download <a href="https://sourceforge.net/project/showfiles.php?group_id=40712&amp;package_id=127784&amp;release_id=405151" target="" class="regularLink">Hibernate Core </a> (for HEM 3.1.0 beta 8, you will need Hibernate 3.2 CR1)</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> copy the required hibernate (and third party libs) into <tt>$glassfish_home/lib</tt>
</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> adjust your persistence.xml file to use Hibernate EntityManager</li>
</ul>

<pre class="wikiPreformatted">
&lt;persistence version="1.0"&gt;
    &lt;persistence-unit name="pu"&gt;
        &lt;provider&gt;org.hibernate.ejb.HibernatePersistence&lt;/provider&gt;
        &lt;!-- JNDI name of the database resource to use --&gt;
        &lt;jta-data-source&gt;jdbc/sqlserver&lt;/jta-data-source&gt;
        &lt;properties&gt;
            &lt;!-- drop and create tables at deployment if needed --&gt;
            &lt;property name="hibernate.hbm2ddl.auto" value="create-drop"/&gt;
        &lt;/properties&gt;
    &lt;/persistence-unit&gt;
&lt;/persistence&gt;
</pre>


<p class="wikiPara">
That's it! Glassfish sets the appropriate Transaction Manager Strategy and Hibernate can guess the appropriate Dialect for most common databases.
</p>

<p class="wikiPara">
Hibernate EntityManager is know to run in all up-to-date EJB3 implementations. Of course, it runs smoothly in <a href="http://www.jboss.com/products/ejb3" target="" class="regularLink">JBoss EJB3 </a> and <a href="http://www.jboss.com/products/ejb3" target="" class="regularLink">JBoss Embeddable EJB3 </a>.
</p>

<h2 class="wikiHeadline2" id="H-MappingOfMaps"><a href="/2006/04/27/never-been-that-close-to-java-persistence-compliance#H-MappingOfMaps">Mapping of Maps</a></h2>

<p class="wikiPara">
This has been a long time requested feature, it is now available, you can map you associations using <tt>Map&lt;Element, ...&gt;</tt> or <tt>Map&lt;Embeddable, ...&gt;</tt> using an explicit key column(s)
</p>
</div>

