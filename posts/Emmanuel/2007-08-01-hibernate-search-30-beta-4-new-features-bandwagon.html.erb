---
title: "Hibernate Search 3.0 Beta 4: new features bandwagon"
author: "Emmanuel Bernard"
blogger_name: "Emmanuel"
creation_date: "01-08-2007"
original_tags: []
tags: [Hibernate Search]

relative_url: /2007/08/01/hibernate-search-30-beta-4-new-features-bandwagon
slug: hibernate-search-30-beta-4-new-features-bandwagon
lace: http://in.relation.to/2236.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2007/08/01/hibernate-search-30-beta-4-new-features-bandwagon
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
Hibernate Search has a new beta out and comes with a bunch of interesting new features:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Named filters: custom filters on query results (transparently cacheable)</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Automatic index optimization</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Access to query metadata (Score, ...)</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Support for the Java Persistence API</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Index Sharding (indexing an entity into several underlying Lucene indexes)</li>
</ul>


<h2 class="wikiHeadline2" id="H-NamedFilters"><a href="/2007/08/01/hibernate-search-30-beta-4-new-features-bandwagon#H-NamedFilters">Named filters</a></h2>
<p class="wikiPara">
Based on Lucene filters, named filters provide the ability to apply custom filter restrictions to the query results. Enabled by name and parameters (very much like Hibernate Core filters), filters are cacheable to improve performance. Some noticeable use cases are security, temporal data, restriction by population, query within query results.
</p>

<h2 class="wikiHeadline2" id="H-AutomaticIndexOptimization"><a href="/2007/08/01/hibernate-search-30-beta-4-new-features-bandwagon#H-AutomaticIndexOptimization">Automatic index optimization</a></h2>
<p class="wikiPara">
Hibernate Search can transparently optimize your index after a certain amount of operations (add, delete) or transactions.
</p>

<h2 class="wikiHeadline2" id="H-QueryResultMetadata"><a href="/2007/08/01/hibernate-search-30-beta-4-new-features-bandwagon#H-QueryResultMetadata">Query result metadata</a></h2>
<p class="wikiPara">
The projection API has been enhanced to return query specific data like the document score (relevance) and a few other metadata.
</p>

<h2 class="wikiHeadline2" id="H-SupportForTheJavaPersistenceAPI"><a href="/2007/08/01/hibernate-search-30-beta-4-new-features-bandwagon#H-SupportForTheJavaPersistenceAPI">Support for the Java Persistence API</a></h2>
<p class="wikiPara">
There is now a FullTextEntityManager and FullTextQuery (extending javax.persistence.Query). No need to access entityManager.getDelegate() anymore.
</p>

<h2 class="wikiHeadline2" id="H-IndexSharding"><a href="/2007/08/01/hibernate-search-30-beta-4-new-features-bandwagon#H-IndexSharding">Index sharding</a></h2>
<p class="wikiPara">
In extreme cases, Lucene indexes need to be split into several physical indexes. Hibernate Search can now index a given entity to several underlying Lucene indexes.
</p>

<h2 class="wikiHeadline2" id="H-AndAFewMore"><a href="/2007/08/01/hibernate-search-30-beta-4-new-features-bandwagon#H-AndAFewMore">And a few more</a></h2>
<p class="wikiPara">
There are a few more additional features:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Ability to index a given property in multiple different fields with different settings (without the need for a custom FieldBridge)</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Fine grained analyzers (global, per entity, per property or per field)</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Expose Lucene merge factor, max merge doc and max buffered docs</li>
</ul>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Ships with Lucene 2.2</li>
</ul>


<p class="wikiPara">
Thanks to John Griffin and Hardy Ferentschik for stepping up on this release. The feature set is up to what was envisioned for the final release (much more actually) and has proven very stable. We expect a short CR cycle and the GA soon after.
</p>

<p class="wikiPara">
Check out <a href="http://search.hibernate.org" target="" class="regularLink">here </a> for more info. The download page is <a href="http://www.hibernate.org/6.html" target="" class="regularLink">here </a>.
</p>
</div>

