---
title: "First Hibernate OGM release (aka 4.1 Final)"
author: "Emmanuel Bernard"
blogger_name: "Emmanuel"
creation_date: "17-12-2014"
original_tags: [Hibernate,Hibernate OGM,News,Release]
tags: [Hibernate OGM,Release]

relative_url: /2014/12/17/first-hibernate-ogm-release-aka-41-final
slug: first-hibernate-ogm-release-aka-41-final
lace: http://in.relation.to/41955.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2014/12/17/first-hibernate-ogm-release-aka-41-final
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
Today is a big day.
The first release of Hibernate OGM with final status. Ever! Don't be fooled by the 4.1 number.
Hibernate OGM is an object mapper for various NoSQL stores and offers the familiar JPA APIs.
This final version offers mapping for MongoDB, Neo4J, Infinispan and Ehcache.
</p>

<p class="wikiPara">
It has been a long journey to reach this release, much longer than we thought.
And there is a long journey ahead of us to implement our full (and exciting!) vision.
But today is the time to celebrate: download this puppy and try it out.
</p>

<h2 class="wikiHeadline2" id="H-WhatIsHibernateOGM"><a href="/2014/12/17/first-hibernate-ogm-release-aka-41-final#H-WhatIsHibernateOGM">What is Hibernate OGM?</a></h2>

<p class="wikiPara">
Hibernate OGM is an object mapper.
It persists object graphs into your NoSQL datastore.
</p>

<p class="wikiPara">
We took great care to map the object structures the most natural way possible ;
we considered all the best practices for each of the NoSQL store we support.
Storing a association in a document store is vastly different than storing the same association in a graph database.
</p>

<pre class="wikiPreformatted">
// Unidirectional one to many association

// Basket
{
  "_id" : "davide_basket",
  "owner" : "Davide",
  "products" : [ "Beer", "Pretzel" ]
}

// Products
{
  "_id" : "Pretzel",
  "description" : "Glutino Pretzel Sticks"
}
{
  "_id" : "Beer",
  "description" : "Tactical nuclear penguin"
}
</pre>


<p class="wikiPara">
Hibernate OGM is 90% Hibernate ORM.
We changed the parts that are specific to SQL and JDBC,
but most of the engine remains untouched.
Same power, same flexibility.
</p>

<h2 class="wikiHeadline2" id="H-WhatIsTheAPILike"><a href="/2014/12/17/first-hibernate-ogm-release-aka-41-final#H-WhatIsTheAPILike">What is the API like?</a></h2>

<p class="wikiPara">
Very simple.
It's JPA. Or Hibernate ORM.
Map your entities with JPA annotations (or via XML),
then use JPA or the Hibernate native APIs to manipulate your objects.
</p>

<pre class="wikiPreformatted brush: java; gutter: false;">@PersistenceContext EntityManager em;

// the transaction boundary is really here to express the flush time
@Transactional
public void createSomeUser() {
    Employer redHat =
        em.createQuery("from Employer e where e.name = :name")
        .setParamater("name", "Red Hat")
        .getSingleResult();
    User emmanuel = new User("Emmanuel", "Bernard");
    user.setTwitterHandle("emmanuelbernard");
    user.setEmployer(redHat);
    em.persist(user);
}
</pre>


<p class="wikiPara">
Our goal is to have a zero barrier of entry to NoSQL object mappers for people familiar with JPA or Hibernate ORM.
</p>

<p class="wikiPara">
Hibernate OGM also has a flexible option system that lets you customize some of the NoSQL store specifics or mapping options.
For example what is the MongoDB Write Concern for this entity (see code example)
or should associations be stored in the owning entity document.
</p>

<pre class="wikiPreformatted brush: java; gutter: false;">@Entity
@WriteConcern(JOURNALED) // MongoDB write concern
public class User {
    ...
}
</pre>


<h2 class="wikiHeadline2" id="H-AndQueries"><a href="/2014/12/17/first-hibernate-ogm-release-aka-41-final#H-AndQueries">And queries?</a></h2>

<p class="wikiPara">
We cannot talk about JPA without mentioning JP-QL.
Offering JP-QL support is challenging at many levels.
To mention only two, joins usually don't exist in NoSQL,
and each store has a very different set of query capabilities.
</p>

<p class="wikiPara">
Hibernate OGM can convert JP-QL queries to the underlying native query language of the datastore.
This functionality is still limited however.
Besides some queries will never map to JP-QL.
So we also let you write native queries specific to your NoSQL store
and map the results to managed entities.
</p>

<pre class="wikiPreformatted brush: java; gutter: false;">// native query using CypherQL
String query = "MATCH ( n:Poem { name:'Portia', author:'Oscar Wilde' } ) RETURN n";
Poem poem = (Poem) em.createNativeQuery( query, Poem.class ).getSingleResult();
</pre>


<h2 class="wikiHeadline2" id="H-WhereCanIUseHibernateOGM"><a href="/2014/12/17/first-hibernate-ogm-release-aka-41-final#H-WhereCanIUseHibernateOGM">Where can I use Hibernate OGM?</a></h2>

<p class="wikiPara">
It works anywhere Hibernate ORM or any JPA provider works.
Java SE, Java EE, all should be good.
We do require JPA 2.1 though.
If you use WildFly (8.2), we have a dedicated module to make things even easier.
</p>

<h2 class="wikiHeadline2" id="H-ForWhichNoSQLStore"><a href="/2014/12/17/first-hibernate-ogm-release-aka-41-final#H-ForWhichNoSQLStore">For which NoSQL store?</a></h2>

<p class="wikiPara">
MongoDB, Neo4J, Infinispan and Ehcache are the one we consider stable.
We are working on CouchDB and Cassandra.
But really, any motivated person can try and map other NoSQL stores:
that's how a few got started.
We have an API that has proven flexible enough so far.
</p>

<h2 class="wikiHeadline2" id="H-CanHibernateOGMDoXYZ"><a href="/2014/12/17/first-hibernate-ogm-release-aka-41-final#H-CanHibernateOGMDoXYZ">Can Hibernate OGM do X, Y, Z?</a></h2>

<p class="wikiPara">
Probably. Maybe not.
</p>

<p class="wikiPara">
The best is to
talk to us in our <a href="https://forums.hibernate.org/viewforum.php?f=31" target="" class="regularLink">forums</a>,
check our <a href="http://hibernate.org/ogm/documentation" target="" class="regularLink">documentation</a> (we spent a lot of time on it),
and simply give it a try.
</p>

<p class="wikiPara">
Generally, the mapping support is complete.
Our query support is still a bit limited compared to where we want it to be.
It will improve quickly now that the foundations are here.
</p>

<p class="wikiPara">
We want to know what you need out of Hibernate OGM,
what feature you miss, which one should be changed.
Come and talk to us in our
<a href="https://forums.hibernate.org/viewforum.php?f=31" target="" class="regularLink">forum</a>
or <a href="http://hibernate.org/community/" target="" class="regularLink">anywhere</a> you can find us.
</p>

<h2 class="wikiHeadline2" id="H-HowToGetStarted"><a href="/2014/12/17/first-hibernate-ogm-release-aka-41-final#H-HowToGetStarted">How to get started?</a></h2>

<p class="wikiPara">
Most of what you need is available in our <a href="http://hibernate.org/ogm/" target="" class="regularLink">web site</a>.
There is a <a href="http://hibernate.org/ogm/documentation/getting-started/" target="" class="regularLink">getting started guide</a>,
and the more complete <a href="http://docs.jboss.org/hibernate/ogm/4.1/reference/en-US/html_single/" target="" class="regularLink">reference documentation</a>.
Get the full Hibernate OGM <a href="http://sourceforge.net/projects/hibernate/files/hibernate-ogm/4.1.0.Final/" target="" class="regularLink">distribution</a>.
And last but not least, for any help,
reach us via our <a href="https://forums.hibernate.org/viewforum.php?f=31" target="" class="regularLink">forum</a>.
</p>

<p class="wikiPara">
It would be impossible to mention all the persons that contributed to Hibernate OGM and how:
conversations, support, code, documentation, bootstrapping new datastore providers...
Many thanks to all of you for making this a reality.
</p>

<p class="wikiPara">
We are not done yet, far from it.
We have plenty of ideas on where we want to bring Hibernate OGM.
That's a discussion for another day.
</p>
</div>

