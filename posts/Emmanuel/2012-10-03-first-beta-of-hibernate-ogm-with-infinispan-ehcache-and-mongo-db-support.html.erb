---
title: "First Beta of Hibernate OGM with Infinispan, Ehcache and MongoDB support"
author: "Emmanuel Bernard"
blogger_name: "Emmanuel"
creation_date: "03-10-2012"
original_tags: [Hibernate,Hibernate OGM,News]
tags: [Hibernate OGM]

relative_url: /2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support
slug: first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support
lace: http://in.relation.to/23569.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
We have been quiet for too long on <a href="http://ogm.hibernate.org" target="" class="regularLink">Hibernate OGM</a>. It is
time for us to speak up because we have a lot to show. And to celebrate, we are releasing
its first beta.
</p>

<h2 class="wikiHeadline2" id="H-WhatIsHibernateOGM"><a href="/2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support#H-WhatIsHibernateOGM">What is Hibernate OGM</a></h2>

<p class="wikiPara">
Hibernate OGM is for NoSQL datastores what Hibernate ORM is for relational databases. A way to
persist your objects into a native datastore. The good thing is that Hibernate OGM aims
at supporting all of JPA features (and the Hibernate native APIs):
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> all the mapping annotations, not a selected few</li>
<li class="wikiUnorderedListItem"> the APIs</li>
<li class="wikiUnorderedListItem"> the semantic (cascade etc)</li>
<li class="wikiUnorderedListItem"> and JP-QL</li>
</ul>

<h2 class="wikiHeadline2" id="H-WorkOnTheNoSQLSide"><a href="/2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support#H-WorkOnTheNoSQLSide">Work on the NoSQL side</a></h2>

<p class="wikiPara">
We initially started with Infinispan as single backend and we worked our way to abstract
it to support more:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> <a href="http://infinispan.org" target="" class="regularLink">Infinispan</a>
</li>
<li class="wikiUnorderedListItem"> <a href="http://ehcache.org" target="" class="regularLink">Ehcache</a>
</li>
<li class="wikiUnorderedListItem"> <a href="http://www.mongodb.org" target="" class="regularLink">MongoDB</a>
</li>
</ul>

<h3 class="wikiHeadline3" id="H-Infinispan"><a href="/2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support#H-Infinispan">Infinispan</a></h3>

<p class="wikiPara">
We did not stand still on Infinispan. We greatly improved the backend in particular
by using the <tt>FineGrainedAtomicMap</tt> class to store data and benefit from its increased
scalability. See more in the performance section later on.
</p>

<h3 class="wikiHeadline3" id="H-Ehcache"><a href="/2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support#H-Ehcache">Ehcache</a></h3>

<p class="wikiPara">
Ehcache was the first to jump on the wagon and propose an alternative backend implementation.
Kudos to Alex Snaps and Greg Luck for taking this bet and help us improve our abstraction API.
</p>

<h3 class="wikiHeadline3" id="H-MongoDB"><a href="/2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support#H-MongoDB">MongoDB</a></h3>

<p class="wikiPara">
MongoDB was the first non key-value based NoSQL solution we supported and we worked very hard to make
sure the mapping was akin to what a developer would have designed without Hibernate OGM.
For example, identifiers are mapped to the <tt>_id</tt> property and
association information is embedded in the entity by default.
</p>

<pre class="wikiPreformatted"></pre>
<pre class="wikiPreformatted">
    {
        "_id" : "owner0001",
        "name": "Emmanuel",
        "twitter": "emmanuelbernard",
        "bankAccounts" : [
            { "bankAccounts_id" : "accountXYZ" }
        ]
    }
</pre>
<pre class="wikiPreformatted"></pre>


<p class="wikiPara">
You can override that setting with various other mapping strategies.
</p>

<p class="wikiPara">
We have more ideas we want to implement to optimize the Hibernate OGM - MongoDB integration
and we will be working with
folks like Jeff Yemin from 10gen to make sure we do the most natural mapping for MongoDB and that
our access layer is as efficient as possible.
</p>

<p class="wikiPara">
Note that we have decided to enable the MongoDB safe mode by default in Hibernate OGM as we thought
it made more sense for models persisted with Hibernate OGM and because we don't want to be responsible
for killing kittens. You can switch this back off of course.
</p>

<h3 class="wikiHeadline3" id="H-OtherNoSQLEngines"><a href="/2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support#H-OtherNoSQLEngines">Other NoSQL engines</a></h3>

<p class="wikiPara">
Expect the list of supported NoSQL engines to grow as we continuously strive to integrate more and more
engines to cover the full bandwidth of NoSQL solutions. Come and talk to us if you
want to help out! You can either contribute to any ongoing effort or even start a new one. It's not that hard.
</p>


<h2 class="wikiHeadline2" id="H-PerformanceConsiderations"><a href="/2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support#H-PerformanceConsiderations">Performance considerations</a></h2>

<p class="wikiPara">
We worked a lot around performance. The project started as an experiment but we did not manage to
make it fail ;) So this time around we worked on performance optimizations.
</p>

<p class="wikiPara">
By side effect, we also improved performance of Hibernate ORM - we reuse the same core engine.
We also entered a chase with the Infinispan team to see which of Hibernate OGM or Infinispan
was consuming the most time in the call stack. We went back and forth a few times and both projects
reduced their overhead by a lot!
</p>

<p class="wikiPara">
At the moment, the profiler does not show much overhead on using Hibernate OGM's stack
compared to directly using the underling NoSQL datastore.
</p>

<h2 class="wikiHeadline2" id="H-QuerySupport"><a href="/2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support#H-QuerySupport">Query support</a></h2>

<p class="wikiPara">
While you won't unfortunately see much in this release, we have been hard at work on the JP-QL
query support. Sanne wrote a JP-QL query parser that will be flexible enough for our needs.
In fact this is also likely going to be the foundation for the next-gen parser of Hibernate ORM.
</p>

<p class="wikiPara">
He has also worked on the first steps to convert a JP-QL query into an Hibernate Search query.
This will let you use Hibernate Search as an internal index and query system besides your NoSQL store.
This can either replace or complement the query capability of the NoSQL solution.
</p>

<p class="wikiPara">
Today, this solution can answer simple queries already (make sure to use the Hibernate <tt>Session</tt> API).
</p>

<p class="wikiPara">
We also have been working on integrating <a href="http://www.jboss.org/teiid/" target="" class="regularLink">Teiid's query engine</a>
which will be our
way towards complex queries not natively supported by the underlying NoSQL engine.
The plan is to combine the JP-QL parser, the Teiid query engine and write native support for the
various NoSQL query options.
</p>

<p class="wikiPara">
We have a great plan but that would take a lot of words to explain so let me save that
for a future post.
</p>

<p class="wikiPara">
In the mean time, you can use Hibernate OGM and do queries in two ways:
</p>

<ol class="wikiOrderedList">
<li class="wikiOrderedListItem"> use Hibernate Search to index your entities and write Hibernate Search queries directly. What is nice about this model is that it's a natural extension to the Hibernate or JPA APIs (managed entities are returned etc)</li>
<li class="wikiOrderedListItem"> use the native query capability of your underlying NoSQL store. Because Hibernate OGM tries to map data in a natural way, it's easy to simply query the NoSQL store directly</li>
</ol>

<p class="wikiPara">
We hope to show you JP-QL support very soon as the foundations are now built.
If you are interested in how we plan on doing queries, come talk to us or go read
the architecture chapter in our <a href="http://www.hibernate.org/subprojects/ogm/docs" target="" class="regularLink">reference documentation</a>
</p>

<h2 class="wikiHeadline2" id="H-CommunityDocumentationAndDownload"><a href="/2012/10/03/first-beta-of-hibernate-ogm-with-infinispan-ehcache-and-mongo-db-support#H-CommunityDocumentationAndDownload">Community, documentation and download</a></h2>

<p class="wikiPara">
We worked on many more stuff like better JPA support, better ease of use, less redundant
data structures, etc but this post is too long already.
Check out the <a href="https://hibernate.onjira.com/secure/ReleaseNote.jspa?projectId=10160&amp;version=11233" target="" class="regularLink">changelog</a>
if you are interested.
</p>

<p class="wikiPara">
This project would be nowhere without the help from our community
and contributors. Special thanks to:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> Guillaume Scheibel who literally made MongoDB's support happen</li>
<li class="wikiUnorderedListItem"> Alan Fitton and Oliver Carr for their work on MongoDB associations support</li>
<li class="wikiUnorderedListItem"> Nicolas Helleringer - he is always around somewhere</li>
<li class="wikiUnorderedListItem"> Khanh Maudoux for his experimentation around Cassandra</li>
<li class="wikiUnorderedListItem"> Davide D'Alto for his experimentation on Neo4J and a few other things</li>
<li class="wikiUnorderedListItem"> Seiya Kawashima for his experimentation around Redis and Voldemort</li>
</ul>

<p class="wikiPara">
If you are interested in contributing, come 
<a href="http://docs.jboss.org/hibernate/ogm/4.0/reference/en-US/html_single/#ogm-howtocontribute-help" target="" class="regularLink">talk to us</a>,
we have many plans and a humongous todo list.
</p>

<p class="wikiPara">
And guys we took great pain - literally - to write a very good reference guide, so
go <a href="http://www.hibernate.org/subprojects/ogm/docs" target="" class="regularLink">read it</a>
and go <a href="http://www.hibernate.org/subprojects/ogm/download" target="" class="regularLink">download Hibernate OGM</a>.
</p>

<p class="wikiPara">
Enjoy</p>
</div>

