---
title: "Ehcache 2.0 supports new Hibernate 3.3 caching provider"
author: "Greg Luck"
blogger_name: "Greg"
creation_date: "23-03-2010"
original_tags: []
tags: [Hibernate ORM]

relative_url: /2010/03/23/ehcache-20-supports-new-hibernate-33-caching-provider
slug: ehcache-20-supports-new-hibernate-33-caching-provider
lace: http://in.relation.to/14924.lace

layout: blog-post

disqus_thread_id: http://in.relation.to/2010/03/23/ehcache-20-supports-new-hibernate-33-caching-provider
---
<div id="documentDisplay" class="documentDisplay">


<p class="wikiPara">
Ehcache 2.0, which was recently released, supports the new Hibernate 3.3/3.5 SPI with its CacheRegionFactory.
</p>

<p class="wikiPara">
This new provider has the following benefits:
</p>

<ul class="wikiUnorderedList">
<li class="wikiUnorderedListItem"> The SPI removed synchronization in the Hibernate cache plumbing. It is left up to the caching implementation on how to control concurrent access. Ehcache, starting with 1.6, removed syncrhonization in favour of a CAS approach. The results, for heavy workloads are <a href="http://gregluck.com/blog/archives/2009/02/ehcache-1-6-2-orders-of-magnitude-faster/" target="" class="regularLink">impressive</a>.</li>
<li class="wikiUnorderedListItem"> The new SPI provides finer grained control over cache region storage and cache strategies. Ehcache 2.0 takes advantage of this to reduce memory use. It provides read only, nonstrict read write and read write strategies, all cluster safe.</li>
<li class="wikiUnorderedListItem"> Ehcache 2.0 is readily distributable with Terracotta Server Array. This gives you cluster safe operation (coherency), HA and scale beyond the limits of an in-process cache, which is how most Hibernate users use Ehcache today. There is the existing ehcache.jar and ehcache-terracotta.jar which provides the client library. It is a couple of lines of config to turn that on in ehcache.xml:</li>
</ul>


<pre class="wikiPreformatted">&lt;ehcache&gt;
&lt;terracottaConfig url="someserver:9510"/&gt;
&lt;defaultCache
            maxElementsInMemory="10000"
            eternal="false"
            timeToLiveSeconds="600"
            &lt;terracotta clustered="true" coherent="true"/&gt;
/&gt;

    &lt;cache name="com.company.domain.Pets"
           maxElementsInMemory="10000"
           eternal=”true”&gt;
           &lt;terracotta clustered="true" coherent="true"/&gt;
           &lt;/cache&gt;
&lt;/cache&gt;
&lt;/ehcache&gt; </pre>



<h1 class="wikiHeadline1" id="H-EnablingEhcache20AsTheCacheRegionFactory"><a href="/2010/03/23/ehcache-20-supports-new-hibernate-33-caching-provider#H-EnablingEhcache20AsTheCacheRegionFactory">Enabling Ehcache 2.0 as the CacheRegionFactory</a></h1>
<p class="wikiPara">
Various versions of Ehcache ship with Hibernate. To get version 2.0 you can either <a href="http://www.terracotta.org/dl/" target="" class="regularLink">download</a> it or, if you are Maven based, add the following Maven snippet:
</p>


<pre class="wikiPreformatted">       &lt;dependency&gt;
            &lt;groupId&gt;net.sf.ehcache&lt;/groupId&gt;
            &lt;artifactId&gt;ehcache&lt;/artifactId&gt;
            &lt;version&gt;[2.0.0,]&lt;/version&gt;
            &lt;type&gt;pom&lt;/type&gt;
        &lt;/dependency&gt;</pre>


<p class="wikiPara">
You then enable it in your hibernate settings with:
</p>


<pre class="wikiPreformatted">&lt;property name="hibernate.cache.region.factory_class"&gt;
        net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory
    &lt;/property&gt;</pre>



<h1 class="wikiHeadline1" id="H-MoreInformation"><a href="/2010/03/23/ehcache-20-supports-new-hibernate-33-caching-provider#H-MoreInformation">More Information</a></h1>

<p class="wikiPara">
We have been updating the <a href="http://ehcache.org/documentation/hibernate.html" target="" class="regularLink">Hibernate Chapter</a> on Ehcache.org. We plant to continue to add tips and tricks together with deep reference information on Hibernate caching with Ehcache there.
</p>









</div>

